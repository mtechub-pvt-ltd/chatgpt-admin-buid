{"version":3,"sources":["components/Images/logo.png","components/Images/illution.png","theme.js","scenes/global/Topbar.jsx","scenes/global/Sidebar.jsx","components/Header.jsx","components/StatBox.jsx","scenes/url.js","scenes/dashboard/index.jsx","scenes/loginPage/useWindowSize.js","scenes/loginPage/login.js","scenes/settingsData/index.jsx","scenes/usersApp/index.jsx","scenes/forgetPassword/useWindowSize.js","scenes/forgetPassword/forgetPassword.js","scenes/subscriptionPlan/index.jsx","scenes/privacypolicy/index.jsx","scenes/termsAndConditions/index.jsx","scenes/usersAppView/index.jsx","scenes/usersAppUpdate/index.jsx","App.js","index.js"],"names":["module","exports","__webpack_require__","p","tokens","mode","_objectSpread","grey","100","200","300","400","500","600","700","800","900","111","123","124","125","primary","greenAccent","redAccent","blueAccent","ColorModeContext","createContext","toggleColorMode","useMode","_useState","useState","_useState2","_slicedToArray","setMode","colorMode","useMemo","prev","createTheme","colors","palette","main","secondary","neutral","dark","light","background","default","typography","fontFamily","join","fontSize","h1","h2","h3","h4","h5","h6","themeSettings","Topbar","navigate","useNavigate","theme","useTheme","useContext","React","createElement","Fragment","Box","display","justifyContent","style","borderBottom","backgroundColor","borderRadius","Tooltip","title","IconButton","onClick","DarkModeOutlinedIcon","LightModeOutlinedIcon","localStorage","removeItem","LogoutIcon","Item","_ref","to","icon","selected","setSelected","MenuItem","active","color","concat","Typography","Link","Sidebar","isCollapsed","setIsCollapsed","_useState3","_useState4","_useState5","_useState6","btnHideSmall","setbtnHideSmall","useEffect","interval","setInterval","window","innerWidth","clearInterval","sx","& .pro-sidebar-inner","& .pro-icon-wrapper","& .pro-inner-item","padding","& .pro-inner-item:hover","& .pro-menu-item.active","ProSidebar","collapsed","Menu","iconShape","MenuOutlinedIcon","undefined","margin","alignItems","ml","Grid","container","spacing","item","xs","md","align","variant","fontWeight","component","paddingLeft","HomeOutlinedIcon","CardMembershipIcon","PeopleAltIcon","SyncIcon","LockIcon","LineWeightIcon","SettingsIcon","Header","subtitle","mb","m","StatBox","increase","progress","width","mt","fontStyle","url","Dashboard","setItems","items","JSON","parse","getItem","console","log","data","setData","loading","setLoading","_useState7","_useState8","data1","setData1","_useState9","_useState10","data2","setData2","_useState11","_useState12","addedByName","setAddedByName","_useState13","_useState14","profileImg","setprofileImg","_useState15","_useState16","notes","setNotes","axios","get","then","response","allData","length","result","catch","error","name","profile_image","creation_date","setDataReport","_useState17","_useState18","dataReports","columnsReports","field","headerName","flex","renderCell","row","userId","email","headerAlign","subscriptionPlan","started_at","ended_at","height","overflowY","gap","gridColumn","GroupIcon","slice","EventIcon","& .MuiDataGrid-root","border","& .MuiDataGrid-cell","& .name-column--cell","& .MuiDataGrid-columnHeaders","& .MuiDataGrid-virtualScroller","& .MuiDataGrid-footerContainer","borderTop","& .MuiCheckbox-root","DataGrid","rows","columns","getRowId","_id","components","Toolbar","GridToolbarContainer","marginBottom","Card","maxWidth","CardHeader","avatar","Avatar","src","subheader","CardContent","map","row1","description","useWindowSize","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","__await","unwrapped","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","Alert","forwardRef","props","ref","MuiAlert","assign","elevation","InputStyle","override","logoStyle","Login","loading1","setLoading1","setTimeout","headers","Content-Type","validationSchema","yup","required","password","formik","useFormik","initialValues","onSubmit","resetForm","_asyncToGenerator","_callee","_context","put","message","setItem","stringify","setsnackbarType","setsnackbarMsg","setOpen","btn","marginTop","borderColor","ContainerStyle","paddingTop","snackbarType","snackbarMsg","_React$useState","_React$useState2","open","handleClose","event","reason","minWidth","handleSubmit","image","TextField","id","onChange","e","setFieldValue","target","touched","Boolean","errors","helperText","label","Button","ClipLoader","css","size","textDecoration","cursor","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","severity","gridCont","setEmail","setUsername","username","setcompanyLogo","img","getAdminLogin","loading2","setLoading2","setPassword","submitHandler","preventDefault","_x","apply","arguments","submitHandler1","_ref2","_callee2","_context2","companyLogo","_x2","inputRef","useRef","_useState19","_useState20","Breadcrumbs","aria-label","underline","href","HomeIcon","Badge","current","click","overlap","badgeContent","AddIcon","placeholder","formData","FormData","append","post","onFileChange1","files","disabled","position","top","left","transform","bgcolor","boxShadow","style1","Team","setTitle","reportBy","setReportBy","eventCategory","setEventCategory","setDescription","location","setLocation","eventDate","setEventDate","_React$useState3","_React$useState4","openAdd","setOpenAdd","_React$useState5","_React$useState6","openUpdate","setOpenUpdate","visibleDelete","setVisibleDelete","date","category","department","timerInterval","getAllData","Swal","fire","timer","timerProgressBar","didOpen","showLoading","b","getHtmlContainer","querySelector","textContent","getTimerLeft","willClose","dismiss","DismissReason","verified_status","idData","handleOpenUpdate","VisibilityIcon","swalWithBootstrapButtons","mixin","customClass","confirmButton","cancelButton","buttonsStyling","textAlign","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","isConfirmed","delete","res","cancel","deleteData","DeleteIcon","_useState21","_useState22","GridToolbarColumnsButton","GridToolbarFilterButton","GridToolbarDensitySelector","GridToolbarExport","Modal","aria-labelledby","aria-describedby","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","gutterBottom","startIcon","DoneIcon","CloseIcon","getBreakPoint","windowWidth","isWindowClient","windowSize","setWindowSize","setSize","addEventListener","removeEventListener","ForgetPassword","PasswordField","setPasswordField","otpCode","setOtpCode","newpassword","setNewPassword","IdUser","setIdUser","ButtonShowChLogin","setButtonShowChLogin","_useState23","_useState24","ButtonShowChUpdate","setButtonShowChUpdate","_useState25","_useState26","ButtonShowChVerify","setButtonShowChVerify","_useState27","_useState28","newPasswordField","setnewPasswordField","_useState29","_useState30","emailDisabled","setemailDisabled","submitHandlerOtpVerify","parseInt","IdUserData","submitHandlerUpdatePass","_useState31","_useState32","setIdUserData","_ref3","_callee4","_context4","_callee3","_context3","otp","_x3","reload","loadingAdd","setLoadingAdd","hideshowarray","setHideShowArray","TitleEdit","setTitleEdit","FeaturesEdit","setFeaturesEdit","PriceEdit","setPriceEdit","NoOfSearchesEdit","setNoOfSearchesEdit","ValidityEdit","setValidityEdit","_React$useState7","_React$useState8","setIdData","features","setArrayListEdit","sethideshowarrayEdit","num_of_searches","validity","price","tempFeature","setTempFeature","ArrayList","setArrayList","ArrayListEdit","hideshowarrayEdit","Price","matches","NoOfSearches","nameArr","EditIcon","_useState33","_useState34","changeView","setChangeView","recipie","arrayData","FiberManualRecordIcon","CardActions","disableSpacing","_toConsumableArray","RemoveCircleOutlineIcon","oldValues","filter","fruit","RemoveItem","RemoveItemEdit","handleClickOpenUpdate","html","setHtml","UserId","setUserId","PrivacyPolicy","newStr","split","Editor","onEditorChange","initialValue","init","menubar","plugins","toolbar","content_style","apiKey","TermsAndCondition","CustomerView","useLocation","type_of_customer","settype_of_customer","setname","dataOrders","setdataOrders","dataChats","setdataChats","user_id","valid","selectedIndex","setSelectedIndex","MessagesChat","setMessagesChat","chatTitleView","setChatTitleView","PersonIcon","List","ListItemButton","index","messages","title_room","ListItemText","sent_by","status","FavoriteIcon","HeartBrokenIcon","added_by","adminId","adminProfileImg","adminName","setAdminId","setAdminName","setAdminProfileImg","tempFeatureTitle","setTempFeatureTitle","App","_useMode","_useMode2","isSidebar","setIsSidebar","pathname","Provider","ThemeProvider","CssBaseline","className","Routes","Route","path","element","LoginPage","SubscriptionPlan","TermsAndConditions","UsersAppView","UsersAppUpdates","UsersApp","SettingsData","ForgetPaswordPage","ReactDOM","createRoot","document","getElementById","render","StrictMode","BrowserRouter"],"mappings":"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","file":"static/js/main.3b38e8c2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.076644be.png\";","module.exports = __webpack_public_path__ + \"static/media/illution.c8bfeb94.png\";","import { createContext, useState, useMemo } from \"react\";\r\nimport { createTheme } from \"@mui/material/styles\";\r\n\r\n// color design tokens export\r\nexport const tokens = (mode) => ({\r\n  ...(mode === \"dark\"\r\n    ? {\r\n        grey: {\r\n          100: \"#e0e0e0\",\r\n          200: \"#c2c2c2\",\r\n          300: \"#a3a3a3\",\r\n          400: \"#858585\",\r\n          500: \"#666666\",\r\n          600: \"#525252\",\r\n          700: \"#3d3d3d\",\r\n          800: \"#292929\",\r\n          900: \"#141414\",\r\n          111: \"#10A37F\",\r\n          123: \"white\",\r\n          124: \"#2D333A\",\r\n          125: \"#42464B\",\r\n\r\n\r\n\r\n\r\n        },\r\n        primary: {\r\n          100: \"#d0d1d5\",\r\n          200: \"#a1a4ab\",\r\n          300: \"#727681\",\r\n          400: \"#1F2A40\",\r\n          500: \"#141b2d\",\r\n          600: \"#fff\",\r\n          700: \"#0c101b\",\r\n          800: \"#080b12\",\r\n          900: \"#040509\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#dbf5ee\",\r\n          200: \"#b7ebde\",\r\n          300: \"#94e2cd\",\r\n          400: \"#70d8bd\",\r\n          500: \"#3CDFFF\",\r\n          600: \"#3CDFFF\",\r\n          700: \"#2e7c67\",\r\n          800: \"#1e5245\",\r\n          900: \"#0f2922\",\r\n        },\r\n        redAccent: {\r\n          100: \"#f8dcdb\",\r\n          200: \"#f1b9b7\",\r\n          300: \"#e99592\",\r\n          400: \"#e2726e\",\r\n          500: \"#db4f4a\",\r\n          600: \"#af3f3b\",\r\n          700: \"#832f2c\",\r\n          800: \"#58201e\",\r\n          900: \"#2c100f\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#e1e2fe\",\r\n          200: \"#c3c6fd\",\r\n          300: \"#a4a9fc\",\r\n          400: \"#3CDFFF\",\r\n          500: \"#6870fa\",\r\n          600: \"#535ac8\",\r\n          700: \"#3e4396\",\r\n          800: \"#2a2d64\",\r\n          900: \"#151632\",\r\n        },\r\n      }\r\n    : {\r\n        grey: {\r\n          100: \"#2D333A\",\r\n          200: \"#292929\",\r\n          300: \"#3d3d3d\",\r\n          400: \"#10A37F\",\r\n          500: \"#666666\",\r\n          600: \"#7e7e7e\",\r\n          700: \"#a3a3a3\",\r\n          800: \"#c2c2c2\",\r\n          900: \"#e0e0e0\",\r\n          111: \"#10A37F\",\r\n          123: \"white\",\r\n          124: \"#2D333A\",\r\n          125: \"#42464B\",\r\n\r\n\r\n\r\n\r\n        },\r\n        primary: {\r\n          100: \"#040509\",\r\n          200: \"#080b12\",\r\n          300: \"#0c101b\",\r\n          400: \"#ffffff\", // manually changed\r\n          500: \"#141b2d\",\r\n          600: \"#fcfcfc\",\r\n          700: \"#727681\",\r\n          800: \"#a1a4ab\",\r\n          900: \"#2D333A\",\r\n        },\r\n        greenAccent: {\r\n          100: \"#0f2922\",\r\n          200: \"#1e5245\",\r\n          300: \"#2e7c67\",\r\n          400: \"#3da58a\",\r\n          500: \"#4cceac\",\r\n          600: \"#3CDFFF\",\r\n          700: \"#94e2cd\",\r\n          800: \"#b7ebde\",\r\n          900: \"#dbf5ee\",\r\n        },\r\n        redAccent: {\r\n          100: \"#2c100f\",\r\n          200: \"#58201e\",\r\n          300: \"#832f2c\",\r\n          400: \"#af3f3b\",\r\n          500: \"#db4f4a\",\r\n          600: \"#e2726e\",\r\n          700: \"#e99592\",\r\n          800: \"#f1b9b7\",\r\n          900: \"#f8dcdb\",\r\n        },\r\n        blueAccent: {\r\n          100: \"#151632\",\r\n          200: \"#2a2d64\",\r\n          300: \"#3e4396\",\r\n          400: \"#535ac8\",\r\n          500: \"#6870fa\",\r\n          600: \"#868dfb\",\r\n          700: \"#a4a9fc\",\r\n          800: \"#c3c6fd\",\r\n          900: \"#e1e2fe\",\r\n        },\r\n      }),\r\n});\r\n\r\n// mui theme settings\r\nexport const themeSettings = (mode) => {\r\n  const colors = tokens(mode);\r\n  return {\r\n    palette: {\r\n      mode: mode,\r\n      ...(mode === \"dark\"\r\n        ? {\r\n            // palette values for dark mode\r\n            primary: {\r\n              main: colors.primary[500],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: colors.primary[500],\r\n            },\r\n          }\r\n        : {\r\n            // palette values for light mode\r\n            primary: {\r\n              main: colors.primary[100],\r\n            },\r\n            secondary: {\r\n              main: colors.greenAccent[500],\r\n            },\r\n            neutral: {\r\n              dark: colors.grey[700],\r\n              main: colors.grey[500],\r\n              light: colors.grey[100],\r\n            },\r\n            background: {\r\n              default: \"#fcfcfc\",\r\n            },\r\n          }),\r\n    },\r\n    typography: {\r\n      fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n      fontSize: 12,\r\n      h1: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 40,\r\n      },\r\n      h2: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 32,\r\n      },\r\n      h3: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 24,\r\n      },\r\n      h4: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 20,\r\n      },\r\n      h5: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 16,\r\n      },\r\n      h6: {\r\n        fontFamily: [\"Source Sans Pro\", \"sans-serif\"].join(\",\"),\r\n        fontSize: 14,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\n// context for color mode\r\nexport const ColorModeContext = createContext({\r\n  toggleColorMode: () => {},\r\n});\r\n\r\nexport const useMode = () => {\r\n  const [mode, setMode] = useState(\"light\");\r\n\r\n  const colorMode = useMemo(\r\n    () => ({\r\n      toggleColorMode: () =>\r\n        setMode((prev) => (prev === \"light\" ? \"dark\" : \"light\")),\r\n    }),\r\n    []\r\n  );\r\n\r\n  const theme = useMemo(() => createTheme(themeSettings(mode)), [mode]);\r\n  return [theme, colorMode];\r\n};\r\n","import React,{ useState ,useEffect} from \"react\";\r\nimport { Box, IconButton, useTheme } from \"@mui/material\";\r\nimport { useContext } from \"react\";\r\nimport { ColorModeContext, tokens } from \"../../theme\";\r\nimport InputBase from \"@mui/material/InputBase\";\r\nimport LightModeOutlinedIcon from \"@mui/icons-material/LightModeOutlined\";\r\nimport DarkModeOutlinedIcon from \"@mui/icons-material/DarkModeOutlined\";\r\nimport NotificationsOutlinedIcon from \"@mui/icons-material/NotificationsOutlined\";\r\nimport SettingsOutlinedIcon from \"@mui/icons-material/SettingsOutlined\";\r\nimport PersonOutlinedIcon from \"@mui/icons-material/PersonOutlined\";\r\nimport SearchIcon from \"@mui/icons-material/Search\";\r\nimport Typography from '@mui/material/Typography';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport LogoutIcon from '@mui/icons-material/Logout';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Tooltip from '@mui/material/Tooltip';\r\n\r\nconst Topbar = () => {\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const colorMode = useContext(ColorModeContext);\r\n// BreadCrumb \r\n// const [items, setItems] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const items = JSON.parse(localStorage.getItem('breadcrumb'));\r\n//     console.log(items)\r\n//     if (items==null) {\r\n    \r\n//     // navigate('/authentication/sign-in')\r\n\r\n\r\n//     }else{\r\n//       setItems(items);\r\n//       console.log(\"items\")\r\n//       console.log(items)\r\n//       // navigate('/dashboard')\r\n//     }\r\n//   }, []);\r\n  return (\r\n    <>\r\n      <Box display=\"flex\"  justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        {/* SEARCH BAR */}\r\n        <Box\r\n          display=\"flex\"\r\n          backgroundColor={colors.primary[800]}\r\n          borderRadius=\"3px\"\r\n        >\r\n          {/* <InputBase sx={{ ml: 2, flex: 1 }} placeholder=\"Search\" /> */}\r\n          {/* <IconButton type=\"button\" sx={{ p: 1 }}>\r\n            <SearchIcon />\r\n          </IconButton> */}\r\n        </Box>\r\n\r\n        {/* ICONS */}\r\n        <Box display=\"flex\" >\r\n        <Tooltip title=\"Theme\">\r\n          <IconButton onClick={colorMode.toggleColorMode}>\r\n            {theme.palette.mode === \"dark\" ? (\r\n              <DarkModeOutlinedIcon />\r\n            ) : (\r\n              <LightModeOutlinedIcon />\r\n            )}\r\n          </IconButton>\r\n          </Tooltip>\r\n          {/* <IconButton>\r\n            <NotificationsOutlinedIcon />\r\n          </IconButton> */}\r\n           <Tooltip title=\"Logout\">\r\n           <IconButton   onClick={() => {\r\n          localStorage.removeItem('items');\r\n          // setIsLoggedin(false);\r\n         navigate('/')\r\n        \r\n       }}>\r\n            <LogoutIcon />\r\n          </IconButton>\r\n           </Tooltip>\r\n         \r\n          {/* <IconButton>\r\n            <PersonOutlinedIcon />\r\n          </IconButton> */}\r\n        </Box>\r\n      </Box>\r\n      {/* <Box display=\"flex\" justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/\">\r\n            <HomeIcon />\r\n          </Link>\r\n\r\n          <Typography color=\"text.primary\">Breadcrumb</Typography>\r\n        </Breadcrumbs>\r\n        <Box display=\"flex\">\r\n        \r\n         \r\n        </Box>\r\n      </Box> */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Topbar;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { ProSidebar, Menu, MenuItem } from \"react-pro-sidebar\";\r\nimport { Box, IconButton, Typography, useTheme } from \"@mui/material\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-pro-sidebar/dist/css/styles.css\";\r\nimport { tokens } from \"../../theme\";\r\nimport HomeOutlinedIcon from \"@mui/icons-material/HomeOutlined\";\r\nimport MenuOutlinedIcon from \"@mui/icons-material/MenuOutlined\";\r\nimport SettingsIcon from '@mui/icons-material/Settings';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport image from '../../components/Images/logo.png'\r\nimport { Grid } from '@mui/material'\r\nimport CategoryIcon from '@mui/icons-material/Category';\r\nimport DinnerDiningIcon from '@mui/icons-material/DinnerDining';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport SyncIcon from '@mui/icons-material/Sync';\r\nimport LockIcon from '@mui/icons-material/Lock';\r\nimport LineWeightIcon from '@mui/icons-material/LineWeight';\r\nimport CardMembershipIcon from '@mui/icons-material/CardMembership';\r\nconst Item = ({ title, to, icon, selected, setSelected }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  return (\r\n    <MenuItem\r\n      active={selected === title}\r\n      style={{\r\n        color: `${colors.grey[123]}`,\r\n      }}\r\n      onClick={() => setSelected(title)}\r\n      icon={icon}\r\n    >\r\n      <Typography>{title}</Typography>\r\n      <Link to={to} />\r\n    </MenuItem>\r\n  );\r\n};\r\nconst logoStyle = {\r\n  width: '100px',\r\n  height: '50px',\r\n}\r\nconst Sidebar = () => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [isCollapsed, setIsCollapsed] = useState(false);\r\n  const [selected, setSelected] = useState(\"Dashboard\");\r\n  const [btnHideSmall,setbtnHideSmall] =useState(true)\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (window.innerWidth < 400) {\r\n        // console.log(window.innerWidth)\r\n        setIsCollapsed(true)\r\n        setbtnHideSmall(false)\r\n      }else{\r\n        // console.log(window.innerWidth)\r\n        setbtnHideSmall(true)\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        \"& .pro-sidebar-inner\": {\r\n          background: `${colors.primary[900]} !important`,\r\n        },\r\n        \"& .pro-icon-wrapper\": {\r\n          backgroundColor: \"transparent !important\",\r\n        },\r\n        \"& .pro-inner-item\": {\r\n          padding: \"5px 35px 5px 20px !important\",\r\n        },\r\n        \"& .pro-inner-item:hover\": {\r\n          color: \"#10A37F !important\",\r\n        },\r\n        \"& .pro-menu-item.active\": {\r\n          color: \"#10A37F !important\",\r\n        },\r\n      }}\r\n    >\r\n      <ProSidebar collapsed={isCollapsed}>\r\n        <Menu iconShape=\"square\">\r\n          {/* LOGO AND MENU ICON */}\r\n{btnHideSmall?<>\r\n  <MenuItem\r\n            onClick={() => setIsCollapsed(!isCollapsed)}\r\n            icon={isCollapsed ? <MenuOutlinedIcon /> : undefined}\r\n            style={{\r\n              margin: \"20px 0px 20px 0px\",\r\n              color: colors.grey[123],\r\n              borderBottom:`1px solid ${colors.grey[123]}`\r\n            }}\r\n          >\r\n            {!isCollapsed && (\r\n              <Box\r\n                display=\"flex\"\r\n                justifyContent=\"space-between\"\r\n                alignItems=\"center\"\r\n                ml=\"15px\"\r\n              >\r\n                < Grid container spacing={2}>\r\n                {/* <Grid item xs={12} md={12} >\r\n                    <IconButton onClick={() => setIsCollapsed(!isCollapsed)}>\r\n                      <MenuOutlinedIcon />\r\n                    </IconButton>\r\n                  </Grid> */}\r\n                  <Grid item xs={12} md={12} align=\"center\">\r\n                  <Typography  variant=\"h3\" style={{ color: colors.grey[123],fontWeight:700  }} onClick={() => {\r\n                        // navigate('/forget-password')\r\n                      }} component=\"h2\">\r\n                        Chat GPT\r\n                      </Typography>\r\n                    {/* <Avatar src={image} variant=\"square\" style={logoStyle} ></Avatar> */}\r\n\r\n\r\n                  </Grid>\r\n                 \r\n                </Grid>\r\n                {/* <Typography variant=\"h3\" color={colors.grey[100]}>\r\n                  Recipie App\r\n                </Typography> */}\r\n\r\n              </Box>\r\n            )}\r\n          </MenuItem>\r\n</>:<></>}\r\n          \r\n\r\n          <Box paddingLeft={isCollapsed ? undefined : \"10%\"}>\r\n            <Item\r\n              title=\"Dashboard\"\r\n              to=\"/home\"\r\n              icon={<HomeOutlinedIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n\r\n            />\r\n             <Item\r\n              title=\"Subscription Plans\"\r\n              to=\"/subscriptionPlan\"\r\n              icon={<CardMembershipIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n            <Item\r\n              title=\"Users\"\r\n              to=\"/users\"\r\n              icon={<PeopleAltIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n             <Item\r\n              title=\"Manage App Updates\"\r\n              to=\"/appUpdates\"\r\n              icon={<SyncIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n            <Item\r\n              title=\"Privacy Policy\"\r\n              to=\"/privacypolicy\"\r\n              icon={<LockIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n              <Item\r\n              title=\"Terms and Conditions\"\r\n              to=\"/termsAndConditions\"\r\n              icon={<LineWeightIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n            <Item\r\n              title=\"Settings\"\r\n              to=\"/settings\"\r\n              icon={<SettingsIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n            \r\n\r\n            {/* <Typography\r\n              variant=\"h6\"\r\n              color={colors.grey[123]}\r\n              sx={{ m: \"15px 0 5px 20px\" }}\r\n            >\r\n              Data\r\n            </Typography> */}\r\n            {/* <Item\r\n              title=\"Categories\"\r\n              to=\"/categories\"\r\n              icon={<CategoryIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n            <Item\r\n              title=\"Recipes\"\r\n              to=\"/recipies\"\r\n              icon={<DinnerDiningIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n            <Item\r\n              title=\"Users\"\r\n              to=\"/users\"\r\n              icon={<PeopleAltIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n            <Item\r\n              title=\"Settings\"\r\n              to=\"/settings\"\r\n              icon={<SettingsIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            /> */}\r\n\r\n            {/* <Item\r\n              title=\"Membership Requests\"\r\n              to=\"/membershipRequests\"\r\n              icon={<CardMembershipIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n           \r\n             <Item\r\n              title=\"Manage Members\"\r\n              to=\"/manageMembers\"\r\n              icon={<GroupsIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n             <Item\r\n              title=\"Events\"\r\n              to=\"/events\"\r\n              icon={<EventIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            /> */}\r\n            {/* \r\n              <Item\r\n              title=\"Meetings\"\r\n              to=\"/meetings\"\r\n              icon={<MeetingRoomIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n             <Item\r\n              title=\"Council\"\r\n              to=\"/council\"\r\n              icon={<CorporateFareIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n             <Item\r\n              title=\"Reports\"\r\n              to=\"/reportsData\"\r\n              icon={<MenuBookIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n              \r\n            />\r\n           \r\n            <Item\r\n              title=\"Monthly Reports\"\r\n              to=\"/monthlyReports\"\r\n              icon={<SummarizeIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n            <Itemgit \r\n              title=\"Library\"\r\n              to=\"/library\"\r\n              icon={<CollectionsIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            />\r\n             <Item\r\n              title=\"Settings\"\r\n              to=\"/settings\"\r\n              icon={<SettingsIcon />}\r\n              selected={selected}\r\n              setSelected={setSelected}\r\n            /> */}\r\n\r\n          </Box>\r\n        </Menu>\r\n      </ProSidebar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\nimport { Typography, Box, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\n\r\nconst Header = ({ title, subtitle }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  return (\r\n    <Box mb=\"30px\">\r\n      <Typography\r\n        variant=\"h2\"\r\n        color={colors.grey[100]}\r\n        fontWeight=\"bold\"\r\n        sx={{ m: \"0 0 5px 0\" }}\r\n      >\r\n        {title}\r\n      </Typography>\r\n      <Typography variant=\"h5\" color={colors.grey[400]}>\r\n        {subtitle}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../theme\";\r\n\r\nconst StatBox = ({ title, subtitle, icon, progress, increase }) => {\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  return (\r\n    <Box width=\"100%\" m=\"0 30px\">\r\n      <Box display=\"flex\" justifyContent=\"space-between\">\r\n        <Box>\r\n          {icon}\r\n        </Box>\r\n        <Box>\r\n        </Box>\r\n      </Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" mt=\"2px\">\r\n        <Typography variant=\"h5\" sx={{ color: colors.greenAccent[500] }}>\r\n          {subtitle}\r\n        </Typography>\r\n        <Typography\r\n          variant=\"h5\"\r\n          fontStyle=\"italic\"\r\n          sx={{ color: colors.grey[125] }}\r\n        >\r\n          {increase}\r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default StatBox;\r\n","\r\nconst url = 'https://chatgpt.mtechub.pro/';\r\n\r\nexport default url;","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport Header from \"../../components/Header\";\r\nimport StatBox from \"../../components/StatBox\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport GroupIcon from '@mui/icons-material/Group';\r\nimport url from '../url'\r\nimport EventIcon from '@mui/icons-material/Event';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport CardMembershipIcon from '@mui/icons-material/CardMembership';\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Avatar from '@mui/material/Avatar';\r\n\r\nimport {\r\n  DataGrid,\r\n  GridToolbarContainer,\r\n} from '@mui/x-data-grid';\r\n\r\nconst Dashboard = () => {\r\n  const theme = useTheme();\r\n  const navigate = useNavigate();\r\n\r\n  const colors = tokens(theme.palette.mode);\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const items = JSON.parse(localStorage.getItem('items'));\r\n    console.log(items)\r\n    if (items == null) {\r\n\r\n      navigate('/')\r\n\r\n\r\n    } else {\r\n      setItems(items);\r\n      console.log(\"items\")\r\n      console.log(items)\r\n      // navigate('/dashboard')\r\n    }\r\n  }, []);\r\n  //Get API Axios\r\n  const [data, setData] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const getAllData = () => {\r\n    axios.get(`${url}api/user/get-all`)\r\n      .then((response) => {\r\n        const allData = response.data.length;\r\n        console.log(allData);\r\n        setData(response.data.result.length);\r\n        // setimagesdata(response.data.images);\r\n\r\n        setLoading(false)\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n  const [data1, setData1] = useState('');\r\n  const getAllData1 = () => {\r\n    axios.get(`${url}api/UserSubscription/getTotalSubscriptions`)\r\n      .then((response) => {\r\n        const allData = response.data;\r\n        console.log(allData);\r\n        setData1(response.data.result.length);\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n  const [data2, setData2] = useState('');\r\n  const [addedByName, setAddedByName] = useState('');\r\n  const [profileImg, setprofileImg] = useState('');\r\n  const [notes, setNotes] = useState([]);\r\n\r\n  const getAllData2 = () => {\r\n    axios.get(`${url}api/AppUpdates/get-all`)\r\n      .then((response) => {\r\n        const allData = response.data;\r\n        console.log(allData);\r\n        setAddedByName(response.data.result[0].name)\r\n        setprofileImg(response.data.result[0].profile_image)\r\n        setNotes(response.data.result[0].notes)\r\n\r\n        setData2(response.data.result[0].creation_date);\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n  const getAllDataReport = () => {\r\n    axios.get(`${url}api/UserSubscription/get-all`).then((response) => {\r\n      const allData = response.data;\r\n      console.log(allData);\r\n      setDataReport(response.data.result);\r\n      setLoading(false)\r\n    })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n  useEffect(() => {\r\n    getAllData();\r\n    getAllData1();\r\n    getAllData2();\r\n    getAllDataReport();\r\n\r\n  }, []);\r\n  function CustomToolbar() {\r\n    return (\r\n      <GridToolbarContainer style={{ marginBottom: '5px' }}>\r\n         < Grid container spacing={2} >\r\n            <Grid item xs={12} md={4} >\r\n            <Typography variant=\"h4\" color=\"text.primary\" fontWeight={700}>\r\n                            All Subscribers\r\n                          </Typography>\r\n\r\n            </Grid>\r\n            </Grid>\r\n\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n  const [dataReports, setDataReport] = useState([]);\r\n  const columnsReports = [\r\n    {\r\n      field: \"userId\",\r\n      headerName: \"User\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <span>{(row.row.userId === undefined)||(row.row.userId === null)||(row.row.userId === '') ? <span>NUll</span> : <span>{row.row.userId.email}</span>}</span>\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: \"subscriptionPlan\",\r\n      headerName: \"Subscription Plan\",\r\n      // type: \"number\",\r\n      flex: 1,\r\n      headerAlign: \"left\",\r\n      align: \"left\",\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <span>{(row.row.subscriptionPlan === undefined)||(row.row.subscriptionPlan === null)||(row.row.subscriptionPlan === '') ? <span>NUll</span> : <span>{row.row.subscriptionPlan.title}</span>}</span>\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: \"started_at\",\r\n      headerName: \"Started At\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <span>{(row.row.started_at === undefined)||(row.row.started_at === null)||(row.row.started_at === '') ? <span>NUll</span> : <span>{row.row.started_at}</span>}</span>\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: \"ended_at\",\r\n      headerName: \"Ended At\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <span>{(row.row.ended_at === undefined)||(row.row.ended_at === null)||(row.row.ended_at === '') ? <span>NUll</span> : <span>{row.row.ended_at}</span>}</span>\r\n          </>\r\n        )\r\n      }\r\n    },\r\n\r\n  ];\r\n\r\n\r\n  return (\r\n    <>\r\n    <div style={{height:'85vh',overflowY:'scroll'}}>\r\n      <Box m=\"20px\" >\r\n        {/* HEADER */}\r\n        <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n          <Header title=\"DASHBOARD\" subtitle=\"Welcome to your dashboard\" />\r\n        </Box>\r\n\r\n        {/* GRID & CHARTS */}\r\n        <Box\r\n          display=\"grid\"\r\n          gap=\"20px\"\r\n        >\r\n          {/* ROW 1 */}\r\n          < Grid container spacing={2} >\r\n            <Grid item xs={12} md={4} >\r\n              <Box\r\n                gridColumn=\"span 4\"\r\n                p={2}\r\n                backgroundColor={colors.primary[400]}\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <StatBox\r\n                  title={data}\r\n                  subtitle=\"Total Users\"\r\n                  progress=\"0.75\"\r\n                  increase={data}\r\n                  icon={\r\n                    <GroupIcon\r\n                      sx={{ color: colors.grey[600], fontSize: \"26px\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Box>\r\n\r\n            </Grid>\r\n            <Grid item xs={12} md={4} >\r\n              <Box\r\n                gridColumn=\"span 4\"\r\n                backgroundColor={colors.primary[400]}\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                p={2}\r\n                justifyContent=\"center\"\r\n              >\r\n                <StatBox\r\n                  title={data1}\r\n                  subtitle=\"Total Subscribers\"\r\n                  increase={data1}\r\n                  icon={\r\n                    <CardMembershipIcon\r\n                      sx={{ color: colors.grey[600], fontSize: \"26px\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Box>\r\n            </Grid>\r\n            <Grid item xs={12} md={4} >\r\n              <Box\r\n                gridColumn=\"span 4\"\r\n                backgroundColor={colors.primary[400]}\r\n                display=\"flex\"\r\n                p={2}\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n              >\r\n                <StatBox\r\n                  title=\"Latest Release\"\r\n                  subtitle=\"Release Date\"\r\n                  increase={data2.slice(0,10)}\r\n                  icon={\r\n                    <EventIcon\r\n                      sx={{ color: colors.grey[600], fontSize: \"26px\" }}\r\n                    />\r\n                  }\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          </Grid>\r\n\r\n        </Box>\r\n      </Box>\r\n      <Box m=\"20px\">\r\n      < Grid container spacing={2} >\r\n            <Grid item xs={12} md={8} >\r\n            <Box\r\n          m=\"5px 0 0 0\"\r\n          height=\"50vh\"\r\n          sx={{\r\n            \"& .MuiDataGrid-root\": {\r\n              border: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-cell\": {\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .name-column--cell\": {\r\n              color: colors.greenAccent[300],\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              backgroundColor: colors.grey[400],\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-virtualScroller\": {\r\n              backgroundColor: colors.primary[400],\r\n            },\r\n            \"& .MuiDataGrid-footerContainer\": {\r\n              borderTop: \"none\",\r\n              backgroundColor: colors.grey[400],\r\n            },\r\n            \"& .MuiCheckbox-root\": {\r\n              color: `${colors.greenAccent[200]} !important`,\r\n            },\r\n          }}\r\n        >\r\n          <DataGrid\r\n            // {...data}\r\n\r\n            rows={dataReports}\r\n            columns={columnsReports}\r\n            getRowId={(row) => row._id}\r\n            loading={loading}\r\n            components={{\r\n              Toolbar: CustomToolbar,\r\n            }}\r\n          />\r\n        </Box>\r\n              </Grid>\r\n              <Grid item xs={12} md={4} mt={5}>\r\n             \r\n              <Card sx={{ maxWidth: 345 }}>\r\n              <Typography variant=\"h6\"\r\n                    color={colors.grey[300]} style={{ fontSize: '20px', margin: '20px', fontWeight: 'bold' }}>Latest App Release Detail</Typography>\r\n                      <CardHeader\r\n                        avatar={\r\n                          <Avatar src={`${url}${profileImg}`}  />\r\n                        }\r\n                        title={`Added by :${addedByName}`}\r\n                        subheader={data2.slice(0, 10)}\r\n                      />\r\n                      <CardContent>\r\n                        {notes.map((row1) => (\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {row1.title} : {row1.description}\r\n                          </Typography>\r\n                        ))}\r\n\r\n                      </CardContent>\r\n                    </Card>\r\n              </Grid>\r\n              </Grid>\r\n        {/* <Header title=\"Users\" subtitle=\"Managing the Users\" /> */}\r\n        {/* <Box\r\n          m=\"5px 0 0 0\"\r\n          height=\"75vh\"\r\n          sx={{\r\n            \"& .MuiDataGrid-root\": {\r\n              border: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-cell\": {\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .name-column--cell\": {\r\n              color: colors.greenAccent[300],\r\n            },\r\n            \"& .MuiDataGrid-columnHeaders\": {\r\n              backgroundColor: colors.grey[400],\r\n              borderBottom: \"none\",\r\n            },\r\n            \"& .MuiDataGrid-virtualScroller\": {\r\n              backgroundColor: colors.primary[400],\r\n            },\r\n            \"& .MuiDataGrid-footerContainer\": {\r\n              borderTop: \"none\",\r\n              backgroundColor: colors.grey[400],\r\n            },\r\n            \"& .MuiCheckbox-root\": {\r\n              color: `${colors.greenAccent[200]} !important`,\r\n            },\r\n          }}\r\n        >\r\n          <DataGrid\r\n            // {...data}\r\n\r\n            rows={dataReports}\r\n            columns={columnsReports}\r\n            getRowId={(row) => row._id}\r\n            loading={loading}\r\n            components={{\r\n              Toolbar: CustomToolbar,\r\n            }}\r\n          />\r\n        </Box> */}\r\n        {/* </Box> */}\r\n      </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n//a Util function that will conver the absolute width into breakpoints\r\nfunction getBreakPoint(windowWidth) {\r\n  if (windowWidth) {\r\n    if (windowWidth < 480) {\r\n      return \"sm\";\r\n    } else if (windowWidth < 1024) {\r\n      return \"md\";\r\n    } else if (windowWidth < 1200) {\r\n      return \"lg\";\r\n    } else {\r\n      return \"xlg\";\r\n    }\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\nfunction useWindowSize() {\r\n  const isWindowClient = typeof window === \"object\";\r\n\r\n  const [windowSize, setWindowSize] = useState(\r\n    isWindowClient ? getBreakPoint(window.innerWidth) : undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    //a handler which will be called on change of the screen resize\r\n    function setSize() {\r\n      setWindowSize(getBreakPoint(window.innerWidth));\r\n    }\r\n\r\n    if (isWindowClient) {\r\n      //register the window resize listener\r\n      window.addEventListener(\"resize\", setSize);\r\n\r\n      //unregister the listerner\r\n      return () => window.removeEventListener(\"resize\", setSize);\r\n    }\r\n  }, [isWindowClient, setWindowSize]);\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Grid, useTheme } from '@mui/material'\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nimport image from '../../components/Images/logo.png'\r\nimport DataBg from '../../components/Images/illution.png'\r\nimport useWindowSize from \"./useWindowSize\";\r\nimport { Typography } from \"@mui/material\";\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport url from '../url'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { tokens } from \"../../theme\";\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst InputStyle = {\r\n  width: '100%',\r\n}\r\n\r\nconst override = {\r\n  display: ' block',\r\n  margin: '0 auto',\r\n}\r\nconst logoStyle = {\r\n  width: '40%',\r\n  height: '50%',\r\n  marginBottom: '10px'\r\n}\r\nconst color = \"black\"\r\n\r\nfunction Login() {\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [loading1, setLoading1] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      setLoading(false)\r\n\r\n    }, 3000)\r\n  }, [])\r\n  //    Get \r\n  let navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n  // Formik \r\n  const validationSchema = yup.object({\r\n    email: yup\r\n      .string()\r\n      .email('Invalid email')\r\n      .required('Required Email'),\r\n    password: yup\r\n      .string('Enter your password')\r\n      .required('Password is required')\r\n\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email:'',\r\n      password: '',\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      console.log(values)\r\n       // Loader \r\n       setLoading1(true)\r\n       setTimeout(async () => {\r\n         await axios.put(`${url}api/admin/login`, {\r\n           email: values.email,\r\n           password: values.password\r\n         }, { headers }).then(response => {\r\n           if (response.data.message === \"Login Successfully\") {\r\n             console.log('Login Successfully')\r\n             console.log(response.data.data._id)\r\n             localStorage.setItem('items', JSON.stringify(response.data.data._id));\r\n             setsnackbarType(\"success\")\r\n             setsnackbarMsg(\"Login Successfully\")\r\n             setOpen(true);\r\n \r\n             setTimeout(() => {\r\n               setOpen(false);\r\n               setLoading1(false)\r\n               resetForm('')\r\n               navigate('/home')\r\n             }, 3000)\r\n           } else if (response.data.message === \"Email Not Found\") {\r\n             setsnackbarType(\"error\")\r\n             setsnackbarMsg(\"Email Doesnot Exist\")\r\n             setOpen(true);\r\n             setTimeout(() => {\r\n               setOpen(false);\r\n               setLoading1(false)\r\n             }, 3000)\r\n           } else if (response.data.message === \"Invalid Password\") {\r\n             setsnackbarType(\"error\")\r\n             setsnackbarMsg(\"Invalid Password\")\r\n             setOpen(true);\r\n             setTimeout(() => {\r\n               setOpen(false);\r\n               setLoading1(false)\r\n             }, 3000)\r\n           } else {\r\n             setsnackbarType(\"error\")\r\n             setsnackbarMsg(\"Something Went Wrong\")\r\n             setOpen(true);\r\n             setTimeout(() => {\r\n               setOpen(false);\r\n               setLoading1(false)\r\n             }, 3000)\r\n           }\r\n         })\r\n           .catch(err => {\r\n             console.log(err)\r\n             setsnackbarType(\"error\")\r\n             setsnackbarMsg(\"Something Went Wrong\")\r\n             setOpen(true);\r\n             setTimeout(() => {\r\n               setOpen(false);\r\n               setLoading1(false)\r\n             }, 3000)\r\n           })\r\n \r\n       }, 3000)\r\n    },\r\n  });\r\n  const btn = {\r\n    width: '99%',\r\n    marginTop: '20px',\r\n    // marginBottom: '20px',\r\n    color: `${colors.grey[123]}`,\r\n    backgroundColor: `${colors.grey[111]}`,\r\n    borderColor: '#ada6f2',\r\n    height: '50px',\r\n    padding: '0px',\r\n  }\r\n  const ContainerStyle = {\r\n    padding: '20px',\r\n    paddingTop: '80px',\r\n    height: '110vh',\r\n    backgroundColor: `${colors.grey[124]}`\r\n\r\n  }\r\n  // SnakBar \r\n  const [snackbarType, setsnackbarType] = useState('')\r\n  const [snackbarMsg, setsnackbarMsg] = useState('')\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      < Grid container spacing={2} style={ContainerStyle}>\r\n        <Grid item xs={12} md={4} >\r\n        </Grid>\r\n        <Grid item xs={12} md={4} >\r\n          <Card sx={{ minWidth: 275, borderRadius: '10px' }}>\r\n            < Grid container spacing={2} >\r\n             \r\n                  <Grid item xs={12} md={12} style={{ padding: '30px' }}>\r\n                  <form onSubmit={formik.handleSubmit} >\r\n                    <Grid align='center' style={{ margin: '20px 10px 0px 10px' }}>\r\n                      <Avatar src={image} variant=\"square\" style={logoStyle} ></Avatar>\r\n                      <TextField style={InputStyle} id=\"outlined-basic\"\r\n                        value={formik.values.email}\r\n                        onChange={(e) => formik.setFieldValue(\"email\", e.target.value)}\r\n                        error={formik.touched.email && Boolean(formik.errors.email)}\r\n                        helperText={formik.touched.email && formik.errors.email}\r\n                        label=\"Email\" variant=\"outlined\" />\r\n                      <br /><br />\r\n                      <TextField style={InputStyle} id=\"outlined-basic\"\r\n                       value={formik.values.password}\r\n                       onChange={(e) => formik.setFieldValue(\"password\", e.target.value)}\r\n                       error={formik.touched.password && Boolean(formik.errors.password)}\r\n                       helperText={formik.touched.password && formik.errors.password}\r\n                        label=\"Password\" variant=\"outlined\" />\r\n\r\n                      <br />\r\n                      <Button variant=\"contained\" type=\"submit\"\r\n                      style={btn} >\r\n                        {loading1 ? <ClipLoader color={color} loading={loading1} css={override} size={10} /> : <h3>Login</h3>}\r\n                      </Button>\r\n\r\n                      <br />\r\n                      <Typography align='right' variant=\"h6\" style={{ color: 'blue', textDecoration: 'underline', cursor: 'pointer' }} onClick={() => {\r\n                        navigate('/forget-password')\r\n                      }} component=\"h2\">\r\n                        Forget Password\r\n                      </Typography>\r\n\r\n                    </Grid>\r\n                    </form>\r\n                  </Grid>\r\n              {/* SnackBar  */}\r\n              <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }}  open={open} autoHideDuration={3000} onClose={handleClose}>\r\n                <Alert onClose={handleClose} severity={snackbarType} sx={{ width: '100%' }}>\r\n                  {snackbarMsg}\r\n                </Alert>\r\n              </Snackbar>\r\n            </Grid>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={2} >\r\n        </Grid>\r\n        <Grid item xs={12} md={12} >\r\n        </Grid>\r\n\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios';\r\nimport { Grid } from '@mui/material'\r\nimport Button from '@mui/material/Button';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Avatar from '@mui/material/Avatar';\r\nimport url from '../url'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport TextField from '@mui/material/TextField';\r\nimport { useTheme, Typography,Box } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport Card from '@mui/material/Card';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Badge from '@mui/material/Badge';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst ContainerStyle = {\r\n  padding: '10px',\r\n  height: \"80vh\",\r\n  overflowY:'scroll',\r\n  color: 'white',\r\n}\r\n\r\nconst InputStyle = {\r\n  width: '100%',\r\n}\r\n\r\nconst override = {\r\n  display: ' block',\r\n  margin: '0 auto',\r\n  //   borderColor: 'red',\r\n}\r\nconst logoStyle = {\r\n  width: '30%',\r\n  height: '30%',\r\n  marginBottom: '10px'\r\n}\r\nconst color = \"black\"\r\n\r\nconst heading = \"Update Password\"\r\nfunction Login() {\r\n\r\n  const theme = useTheme();\r\n\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const [items, setItems] = useState([]);\r\n\r\n  const gridCont = {\r\n    padding: '30px',\r\n    margin: '20px',\r\n    // marginLeft: '20px',\r\n    // marginRight: '20px',\r\n    // marginTop: '-70px',\r\n    backgroundColor: `${colors.primary[400]}`,\r\n    // height:'430px'\r\n  }\r\n\r\n  const getAdminLogin = (items) => {\r\n    axios.get(`${url}api/admin/get-admin-by-ID/${items}`\r\n    )\r\n      .then((response) => {\r\n        console.log(\"response.data.data[0]\")\r\n        console.log(response.data)\r\n        setItems(response.data.data[0]._id)\r\n        setEmail(response.data.data[0].email)\r\n        setUsername(response.data.data[0].username)\r\n        setcompanyLogo(response.data.data[0].img)\r\n\r\n        // setPassword(response.data.password)\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n  }\r\n  useEffect(() => {\r\n\r\n    const items = JSON.parse(localStorage.getItem('items'));\r\n    console.log(items)\r\n    setItems(items)\r\n    getAdminLogin(items);\r\n\r\n  }, []);\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [loading1, setLoading1] = useState(false);\r\n  const [loading2, setLoading2] = useState(false);\r\n\r\n\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      setLoading(false)\r\n\r\n    }, 3000)\r\n  }, [])\r\n  //    Get \r\n  let navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  //  const [idData, setidData] = useState(\"\");\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n  // SnakBar \r\n  const [snackbarType, setsnackbarType] = useState('')\r\n  const [snackbarMsg, setsnackbarMsg] = useState('')\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    // Loader \r\n    // setLoading1(true)\r\n\r\n    if (email === '' || password === '') {\r\n      setsnackbarType(\"error\")\r\n      setsnackbarMsg(\"Please Fill All Fields!\")\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setLoading1(false)\r\n      }, 3000)\r\n\r\n    } else {\r\n      setLoading1(true)\r\n      await axios.put(`${url}api/admin/update-credentials`, {\r\n        email: email,\r\n        password: password,\r\n        _id: items\r\n      }, { headers }).then(response => {\r\n        console.log(response)\r\n        setsnackbarType(\"success\")\r\n        setsnackbarMsg(\"Password Updated Successfully\")\r\n        setPassword('')\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n          setLoading1(false)\r\n        }, 3000)\r\n\r\n      })\r\n        .catch(err => {\r\n          console.log(err)\r\n          setsnackbarType(\"error\")\r\n          setsnackbarMsg(err)\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            setOpen(false);\r\n            setLoading1(false)\r\n          }, 3000)\r\n        })\r\n    }\r\n\r\n  }\r\n  const submitHandler1 = async (e) => {\r\n    e.preventDefault()\r\n    // Loader \r\n    setLoading2(true)\r\nif(companyLogo === ''){\r\n  setsnackbarType(\"error\")\r\n  setsnackbarMsg(\"Please Select Profile Image!\")\r\n  setOpen(true);\r\n  setTimeout(() => {\r\n    setOpen(false);\r\n    setLoading2(false)\r\n  }, 3000)\r\n}else if (username === '') {\r\n      setsnackbarType(\"error\")\r\n      setsnackbarMsg(\"Please Fill Username!\")\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setLoading2(false)\r\n      }, 3000)\r\n\r\n    } else {\r\n      setLoading2(true)\r\n      await axios.put(`${url}api/admin/update-profile`, {\r\n        username: username,\r\n        img: companyLogo,\r\n        _id: items\r\n      }, { headers }).then(response => {\r\n        console.log(response)\r\n        setsnackbarType(\"success\")\r\n        setsnackbarMsg(\"Profile Updated Successfully\")\r\n        setPassword('')\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n          setLoading2(false)\r\n        }, 3000)\r\n\r\n      })\r\n        .catch(err => {\r\n          console.log(err)\r\n          setsnackbarType(\"error\")\r\n          setsnackbarMsg(err)\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            setOpen(false);\r\n            setLoading1(false)\r\n          }, 3000)\r\n        })\r\n    }\r\n\r\n  }\r\n  const btn = {\r\n    width: '99%',\r\n    marginTop: '20px',\r\n    // marginBottom: '20px',\r\n    color: `${colors.grey[123]}`,\r\n    backgroundColor: `${colors.grey[111]}`,\r\n    borderColor: '#ada6f2',\r\n    height: '50px',\r\n    padding: '0px',\r\n  }\r\n  // choose image\r\n  const inputRef = useRef(null);\r\n\r\n  const handleClick = () => {\r\n    // 👇️ open file input box on click of other element\r\n    inputRef.current.click();\r\n  };\r\n  const [companyLogo, setcompanyLogo] = useState('');\r\n  const onFileChange1 = (e) => {\r\n    const formData = new FormData()\r\n    formData.append('image', e)\r\n    axios.post(`${url}upload-image`,\r\n      formData).then(response => {\r\n        console.log(response.data)\r\n        setcompanyLogo(response.data);\r\n        console.log('resdbb');\r\n        console.log(companyLogo);\r\n\r\n      })\r\n  }\r\n  return (\r\n    <div>\r\n       <Box display=\"flex\" justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/home\">\r\n            <HomeIcon />\r\n          </Link>\r\n\r\n          <Typography color=\"text.primary\">Settings</Typography>\r\n        </Breadcrumbs>\r\n\r\n       \r\n      </Box>\r\n      < Grid container spacing={2} style={ContainerStyle}>\r\n\r\n        <Grid item xs={12} md={6}\r\n        >\r\n          <Card sx={{ minWidth: 275 }}>\r\n            < Grid container spacing={2} >\r\n              <Grid item xs={12} md={12} style={gridCont} align='center'>\r\n\r\n                <Grid align='center'>\r\n                  {/* <Grid item xs={12} md={12}> */}\r\n                  <Badge color=\"primary\" sx={{ cursor: \"pointer\" }} onClick={handleClick} overlap=\"circular\" badgeContent={\r\n                    <>\r\n                      <AddIcon />\r\n                      <input type=\"file\" name=\"image\" placeholder=\"image\" style={{ display: 'none' }}\r\n                        ref={inputRef}\r\n                        onChange={(e) => onFileChange1(e.target.files[0])} />\r\n                    </>} >\r\n                    <Avatar src={`${url}${companyLogo}`} sx={{ width: \"100px\", height: \"100px\", border: '1px solid white', marginBottom: '10px' }} />\r\n\r\n                  </Badge>\r\n                  <Typography variant=\"h6\"\r\n                    color={colors.grey[300]} style={{ fontSize: '20px', margin: '20px', fontWeight: 'bold' }}>Update Admin</Typography>\r\n\r\n                  {/* Email  */}\r\n\r\n                  <TextField style={InputStyle} id=\"outlined-basic\"\r\n                    value={username}\r\n                    onChange={\r\n                      (e) => setUsername(e.target.value)\r\n                    }\r\n                    label=\"Username\" variant=\"outlined\" required />\r\n                  <br /><br />\r\n                  <TextField style={InputStyle} id=\"outlined-basic\"\r\n                    value={email}\r\n                    disabled\r\n                    onChange={\r\n                      (e) => setEmail(e.target.value)\r\n                    }\r\n                    label=\"Email\" variant=\"outlined\" required />\r\n                  <br />\r\n                  <Button variant=\"contained\" onClick={\r\n                    submitHandler1\r\n                  } style={btn} >\r\n                    {loading2 ? <ClipLoader color={color} loading={loading2} css={override} size={10} /> : <h3>Update</h3>}\r\n                  </Button>\r\n                  <br />\r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n            {/* SnackBar  */}\r\n            <Snackbar open={open} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity={snackbarType} sx={{ width: '100%' }}>\r\n                {snackbarMsg}\r\n              </Alert>\r\n            </Snackbar>\r\n\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}\r\n        >\r\n          <Card sx={{ minWidth: 275 }}>\r\n            < Grid container spacing={2} >\r\n              <Grid item xs={12} md={12} style={gridCont} align='center'>\r\n\r\n                <Grid align='center'>\r\n                 \r\n                  <Typography variant=\"h6\"\r\n                    color={colors.grey[300]} style={{ fontSize: '20px', margin: '20px', fontWeight: 'bold' }}>Update Password</Typography>\r\n                  <br /><br />\r\n                  <TextField style={InputStyle} id=\"outlined-basic\"\r\n                    value={email}\r\n                    disabled\r\n                    onChange={\r\n                      (e) => setEmail(e.target.value)\r\n                    }\r\n                    label=\"Email\" variant=\"outlined\" required />\r\n                  <br /><br />\r\n                  <TextField style={InputStyle} id=\"outlined-basic\"\r\n                    value={password}\r\n\r\n                    onChange={\r\n                      (e) => setPassword(e.target.value)\r\n                    }\r\n                    label=\"Password\" variant=\"outlined\" required />\r\n\r\n                  <br />\r\n                  <Button variant=\"contained\" onClick={\r\n                    submitHandler\r\n                  } style={btn} >\r\n                    {loading1 ? <ClipLoader color={color} loading={loading1} css={override} size={10} /> : <h3>Update</h3>}\r\n                  </Button>\r\n                  <br />\r\n                </Grid>\r\n\r\n              </Grid>\r\n\r\n            </Grid>\r\n            {/* SnackBar  */}\r\n            <Snackbar open={open} anchorOrigin={{ vertical: 'top', horizontal: 'right' }} autoHideDuration={3000} onClose={handleClose}>\r\n              <Alert onClose={handleClose} severity={snackbarType} sx={{ width: '100%' }}>\r\n                {snackbarMsg}\r\n              </Alert>\r\n            </Snackbar>\r\n\r\n          </Card>\r\n        </Grid>\r\n      </Grid></div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { Box, Typography, useTheme, IconButton } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport Header from \"../../components/Header\";\r\nimport Button from '@mui/material/Button';\r\nimport Fade from '@mui/material/Fade';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Modal from '@mui/material/Modal';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Badge from '@mui/material/Badge';\r\nimport url from \"../url\"\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport VisibilityIcon from '@mui/icons-material/Visibility';\r\n\r\n\r\nimport {\r\n  DataGrid,\r\n  GridToolbarContainer,\r\n  GridToolbarColumnsButton,\r\n  GridToolbarFilterButton,\r\n  GridToolbarExport,\r\n  GridToolbarDensitySelector,\r\n} from '@mui/x-data-grid';\r\nimport React, { useState, useEffect } from \"react\";\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  // width: '100%',\r\n  bgcolor: 'beige',\r\n  borderRadius: '10px',\r\n  padding: \"0px 40px 40px 40px\",\r\n  boxShadow: 24,\r\n  // p: 4,\r\n};\r\nconst style1 = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'beige',\r\n  borderRadius: '10px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Team = () => {\r\n   // SnakBar \r\n   const [open, setOpen] = React.useState(false);\r\n\r\n   const handleClose = (event, reason) => {\r\n     if (reason === 'clickaway') {\r\n       return;\r\n     }\r\n     setOpen(false);\r\n   };\r\n   const [snackbarType, setsnackbarType] = useState('')\r\n   const [snackbarMsg, setsnackbarMsg] = useState('')\r\n  // Tabs value\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [title, setTitle] = useState('');\r\n  const [reportBy, setReportBy] = useState('');\r\n  const [eventCategory, setEventCategory] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [location, setLocation] = useState('');\r\n  const [eventDate, setEventDate] = useState('');\r\n  // Approve \r\n  const [openAdd, setOpenAdd] = React.useState(false);\r\n  const handleCloseAdd = () => setOpenAdd(false);\r\n  // Update \r\n  const [openUpdate, setOpenUpdate] = React.useState(false);\r\n\r\n  const handleOpenUpdate = (row) => {\r\n    navigate('/usersView',\r\n    {\r\n      state: {\r\n        idData: row,\r\n      }\r\n    })\r\n    setOpenUpdate(true);\r\n    console.log(row)\r\n  }\r\n  const handleCloseUpdate = () => setOpenUpdate(false);\r\n  // Delete \r\n  const [visibleDelete, setVisibleDelete] = useState(false)\r\n  // Delete \r\n  const deleteData = (id) => {\r\n    console.log('deleting User')\r\n    console.log(id);\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger'\r\n      },\r\n      buttonsStyling: {\r\n        backgroundColor: '#4CAF50', /* Green */\r\n        border: 'none',\r\n        color: 'white',\r\n        padding: '15px 32px',\r\n        textAlign: 'center',\r\n        textDecoration: 'none',\r\n        display: 'inline-block',\r\n        fontSize: '16px'\r\n      }\r\n    })\r\n    swalWithBootstrapButtons.fire({\r\n      title: 'Are you sure?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'No, cancel!',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`${url}api/user/delete/${id}`,\r\n          { headers })\r\n          .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            getAllData()\r\n            setsnackbarType(\"success\")\r\n            setsnackbarMsg(\"User Deleted Successfully !\")\r\n            setOpen(true);\r\n            setOpenAdd(false);\r\n            // setOpen1(true);\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        swalWithBootstrapButtons.fire(\r\n          'Cancelled',\r\n          'User is safe :)',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n\r\n  }\r\n  // Submit \r\n  const submitHandler = async () => {\r\n    axios.post(`${url}create-event`, {\r\n      // id:1,\r\n      // images: selectedFile1,\r\n      title: title,\r\n      description: description,\r\n      location: location,\r\n      date: eventDate,\r\n      category: eventCategory,\r\n      department: reportBy\r\n\r\n    }, { headers }).then(response => {\r\n      console.log(response)\r\n      setOpenAdd(false);\r\n      // setData([...data, response.data]);\r\n      getAllData()\r\n\r\n      let timerInterval\r\n      Swal.fire({\r\n        title: 'Created Event Successfully',\r\n        timer: 2000,\r\n        timerProgressBar: true,\r\n        didOpen: () => {\r\n          Swal.showLoading()\r\n          const b = Swal.getHtmlContainer().querySelector('b')\r\n          timerInterval = setInterval(() => {\r\n            b.textContent = Swal.getTimerLeft()\r\n          }, 100)\r\n        },\r\n        willClose: () => {\r\n          clearInterval(timerInterval)\r\n        }\r\n      }).then((result) => {\r\n        /* Read more about handling dismissals below */\r\n        if (result.dismiss === Swal.DismissReason.timer) {\r\n          console.log('I was closed by the timer')\r\n          // setSelectedFile1([]);\r\n          setTitle('');\r\n          setDescription('');\r\n          setLocation('');\r\n          setEventDate('');\r\n          setEventCategory('');\r\n          setReportBy('')\r\n        }\r\n      })\r\n    })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n    // })\r\n\r\n\r\n  }\r\n  const columns = [\r\n    {\r\n      field: \"email\",\r\n      headerName: \"Email\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            {(row.row.email === undefined) || (row.row.email === null) || (row.row.email === '') ? <>Null</> : <>{row.row.email}</>}\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: \"verified_status\",\r\n      headerName: \"Verified Status\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n<Grid container spacing={2} >\r\n                  <Grid item xs={1} md={1} mt></Grid>\r\n                  <Grid item xs={4} md={4} mt>\r\n                  {(row.row.verified_status) ?\r\n              <>\r\n                <Badge color=\"secondary\" badgeContent=\"Verified\">\r\n                </Badge></> : <>\r\n                <Badge color=\"error\" badgeContent=\"Not Verified\">\r\n                </Badge></>\r\n            }\r\n                  </Grid>\r\n\r\n    </Grid>\r\n          \r\n\r\n          </>\r\n\r\n        );\r\n      },\r\n    },\r\n    {\r\n      field: \"_id\",\r\n      headerName: \"Action\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            {/* <IconButton\r\n            // onClick={() => handleOpenUpdate(row.row._id)}\r\n            >\r\n              <Tooltip title=\"Edit\">\r\n                <EditIcon />\r\n              </Tooltip>\r\n            </IconButton> */}\r\n            <IconButton onClick={() => handleOpenUpdate(row.row._id)}>\r\n              <Tooltip title=\"View\">\r\n                <VisibilityIcon />\r\n              </Tooltip>\r\n            </IconButton>\r\n            <IconButton\r\n             onClick={() => deleteData(row.row._id)}\r\n            >\r\n              <Tooltip title=\"Delete\">\r\n\r\n                <DeleteIcon style={{ color: 'red' }} />\r\n              </Tooltip>\r\n            </IconButton>\r\n          </>\r\n\r\n        );\r\n      },\r\n    },\r\n\r\n  ];\r\n  function CustomToolbar() {\r\n    return (\r\n      <GridToolbarContainer style={{ marginBottom: '5px', backgroundColor: `${colors.primary[600]}` }}>\r\n        <GridToolbarColumnsButton />\r\n        <GridToolbarFilterButton />\r\n        <GridToolbarDensitySelector />\r\n        <GridToolbarExport />\r\n\r\n\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n  //Get API Axios\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const getAllData = () => {\r\n    axios.get(`${url}api/user/get-all`)\r\n      .then((response) => {\r\n        const allData = response.data;\r\n        console.log(allData);\r\n        setData(response.data.result);\r\n        // setimagesdata(response.data.images);\r\n        setLoading(false)\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllData();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/home\">\r\n            <HomeIcon />\r\n          </Link>\r\n\r\n          <Typography color=\"text.primary\">Users</Typography>\r\n        </Breadcrumbs>\r\n\r\n      </Box>\r\n      <div style={{height:'550px',overflowY:'scroll'}}>\r\n      <Box m=\"20px\">\r\n        <Grid container spacing={2} >\r\n          <Grid item xs={12} md={12} mt>\r\n            <Header title=\"Users\" subtitle=\"Managing the Users\" />\r\n\r\n          </Grid>\r\n        </Grid>\r\n        <Box sx={{ width: '100%' }}>\r\n\r\n          <Box\r\n            m=\"5px 0 100px 0px\"\r\n            height=\"70vh\"\r\n            sx={{\r\n              \"& .MuiDataGrid-root\": {\r\n                border: \"none\",\r\n              },\r\n              \"& .MuiDataGrid-cell\": {\r\n                borderBottom: \"none\",\r\n              },\r\n              \"& .name-column--cell\": {\r\n                color: colors.greenAccent[300],\r\n              },\r\n              \"& .MuiDataGrid-columnHeaders\": {\r\n                backgroundColor: colors.grey[400],\r\n                borderBottom: \"none\",\r\n              },\r\n              \"& .MuiDataGrid-virtualScroller\": {\r\n                backgroundColor: colors.primary[400],\r\n              },\r\n              \"& .MuiDataGrid-footerContainer\": {\r\n                borderTop: \"none\",\r\n                backgroundColor: colors.grey[400],\r\n              },\r\n              \"& .MuiCheckbox-root\": {\r\n                color: `${colors.greenAccent[200]} !important`,\r\n              },\r\n            }}\r\n          >\r\n            <DataGrid\r\n              // {...data}\r\n\r\n              rows={data}\r\n              columns={columns}\r\n              getRowId={(row) => row._id}\r\n              loading={loading}\r\n              components={{\r\n                Toolbar: CustomToolbar,\r\n              }}\r\n            />\r\n          </Box>\r\n          {/* </TabPanel> */}\r\n\r\n        </Box>\r\n         {/* SnackBar  */}\r\n         <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackbarType}\r\n            sx={{\r\n              width: '100%'\r\n            }}>\r\n            {snackbarMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {/* Add  */}\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={openAdd}\r\n            onClose={handleCloseAdd}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={openAdd}>\r\n              <Box sx={style}>\r\n                <Grid container spacing={2} >\r\n                  <Grid item xs={12} md={12} mt={3}>\r\n                    <Typography variant=\"h3\" style={{ color: `${colors.grey[400]}`, fontWeight: 700 }} gutterBottom>\r\n                      Add Category\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={3}>\r\n                    {/* color: '#7e7e7e */}\r\n                    <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                      Name\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={9}>\r\n                    <TextField value={title} style={{ width: '100%' }}\r\n                      onChange={(e) => setTitle(e.target.value)\r\n                      } id=\"filled-basic\" label=\"Enter Category\" variant=\"filled\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={12} align=\"center\">\r\n                    {/* <button type='submit'>Submit</button> */}\r\n                    <Button variant=\"contained\" style={{ backgroundColor: `${colors.grey[400]}` }} onClick={() => submitHandler()}>\r\n                      Submit\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        {/* Update  */}\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={openUpdate}\r\n            onClose={handleCloseUpdate}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={openUpdate}>\r\n              <Box sx={style}>\r\n\r\n                <Grid container spacing={2} >\r\n                  <Grid item xs={12} md={12} mt={3}>\r\n                    <Typography variant=\"h3\" style={{ color: `${colors.grey[400]}`, fontWeight: 700 }} gutterBottom>\r\n                      Edit Category\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={3}>\r\n                    <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                      Name\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={9}>\r\n\r\n                    <TextField value={title} style={{ width: '100%' }}\r\n                      onChange={(e) => setTitle(e.target.value)\r\n                      } id=\"filled-basic\" label=\"Enter Category\" variant=\"filled\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={12} align=\"center\">\r\n                    <Button variant=\"contained\" style={{ backgroundColor: `${colors.grey[400]}` }} onClick={() => submitHandler()}>\r\n                      Update\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        {/* Delete  */}\r\n        <div>\r\n          <Modal\r\n            open={visibleDelete}\r\n            onClose={() => setVisibleDelete(false)}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n          >\r\n            <Box sx={style1}>\r\n              <Grid container spacing={2} align=\"center\">\r\n                <Grid item xs={12} md={12}>\r\n                  <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">\r\n                    Are you sure you want to delete<br /> this Staff Member?\r\n                  </Typography>\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  <Button startIcon={<DoneIcon />} variant=\"outlined\" onClick={() => setVisibleDelete(false)}>\r\n                    Yes\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item xs={6} md={6}>\r\n                  <Button startIcon={<CloseIcon />} variant=\"contained\" onClick={() => setVisibleDelete(false)}>\r\n                    No\r\n                  </Button>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Modal>\r\n        </div>\r\n        {/* </Box> */}\r\n      </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import { useState, useEffect } from \"react\";\r\n\r\n//a Util function that will conver the absolute width into breakpoints\r\nfunction getBreakPoint(windowWidth) {\r\n  if (windowWidth) {\r\n    if (windowWidth < 480) {\r\n      return \"sm\";\r\n    } else if (windowWidth < 1024) {\r\n      return \"md\";\r\n    } else if (windowWidth < 1200) {\r\n      return \"lg\";\r\n    } else {\r\n      return \"xlg\";\r\n    }\r\n  } else {\r\n    return undefined;\r\n  }\r\n}\r\nfunction useWindowSize() {\r\n  const isWindowClient = typeof window === \"object\";\r\n\r\n  const [windowSize, setWindowSize] = useState(\r\n    isWindowClient ? getBreakPoint(window.innerWidth) : undefined\r\n  );\r\n\r\n  useEffect(() => {\r\n    //a handler which will be called on change of the screen resize\r\n    function setSize() {\r\n      setWindowSize(getBreakPoint(window.innerWidth));\r\n    }\r\n\r\n    if (isWindowClient) {\r\n      //register the window resize listener\r\n      window.addEventListener(\"resize\", setSize);\r\n\r\n      //unregister the listerner\r\n      return () => window.removeEventListener(\"resize\", setSize);\r\n    }\r\n  }, [isWindowClient, setWindowSize]);\r\n\r\n  return windowSize;\r\n}\r\n\r\nexport default useWindowSize;\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport { Grid, useTheme } from '@mui/material'\r\nimport Button from '@mui/material/Button';\r\nimport Card from '@mui/material/Card';\r\nimport { useNavigate } from 'react-router-dom'\r\nimport Swal from 'sweetalert2'\r\nimport image from '../../components/Images/logo.png'\r\nimport DataBg from '../../components/Images/illution.png'\r\nimport useWindowSize from \"./useWindowSize\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\n\r\nimport Avatar from '@mui/material/Avatar';\r\nimport url from '../url'\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\n\r\nconst InputStyle = {\r\n  width: '100%',\r\n}\r\n\r\nconst headingStyle = {\r\n  fontSize: '16px',\r\n  color: 'black'\r\n\r\n}\r\nconst override = {\r\n  display: ' block',\r\n  margin: '0 auto',\r\n}\r\nconst logoStyle = {\r\n  width: '40%',\r\n  height: '50%',\r\n  marginBottom: '10px'\r\n}\r\n\r\nconst color = \"black\"\r\n\r\nfunction ForgetPassword() {\r\n  const theme = useTheme();\r\n\r\n  const colors = tokens(theme.palette.mode);\r\n  const windowSize = useWindowSize();\r\n  const [loading, setLoading] = useState(\"\");\r\n  const [loading1, setLoading1] = useState(false);\r\n  const ContainerStyle = {\r\n    padding: '20px',\r\n    paddingTop: '80px',\r\n    height: '110vh',\r\n    backgroundColor: `${colors.grey[124]}`\r\n\r\n  }\r\n  const btn = {\r\n    width: '99%',\r\n    color: `${colors.grey[123]}`,\r\n    backgroundColor: `${colors.grey[111]}`,\r\n    borderColor: '#ada6f2',\r\n    height: '50px',\r\n    padding: '0px',\r\n  }\r\n  // SnakBar \r\n  const [snackbarType, setsnackbarType] = useState('')\r\n  const [snackbarMsg, setsnackbarMsg] = useState('')\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  useEffect(() => {\r\n    setLoading(true)\r\n    setTimeout(() => {\r\n      setLoading(false)\r\n\r\n    }, 3000)\r\n  }, [])\r\n  //    Get \r\n  let navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  //  const [idData, setidData] = useState(\"\");\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n\r\n  const [PasswordField, setPasswordField] = useState(false)\r\n  const [otpCode, setOtpCode] = useState('')\r\n  const [newpassword, setNewPassword] = useState('')\r\n  const [IdUser, setIdUser] = useState('')\r\n\r\n  const [ButtonShowChLogin, setButtonShowChLogin] = useState(true)\r\n  const [ButtonShowChUpdate, setButtonShowChUpdate] = useState(false)\r\n\r\n  const [ButtonShowChVerify, setButtonShowChVerify] = useState(false)\r\n  const [newPasswordField, setnewPasswordField] = useState(false)\r\n  const [emailDisabled,setemailDisabled]=useState(false)\r\n  const submitHandlerOtpVerify = async (e) => {\r\n    if (password === '') {\r\n      setLoading1(true)\r\n      console.log('Empty Field')\r\n      setsnackbarType(\"error\")\r\n      setsnackbarMsg(\"Please Enter OTP to continue\")\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setLoading1(false)\r\n      }, 3000)\r\n      // Swal.fire('Please Enter OTP')\r\n    } else {\r\n      // setLoading1(true)\r\n      console.log(otpCode)\r\n      console.log(password)\r\n\r\n      if (parseInt(password) === parseInt(otpCode)) {\r\n        console.log(' matched')\r\n\r\n        setLoading1(true)\r\n        setsnackbarType(\"success\")\r\n        setsnackbarMsg(\"OTP matched Successfully. Enter New Password\")\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setPasswordField(false)\r\n          setnewPasswordField(true)\r\n          setButtonShowChLogin(false)\r\n          setButtonShowChVerify(false)\r\n          setButtonShowChUpdate(true)\r\n          axios.get(`${url}api/admin/get-admin-by-ID/${IdUserData}`\r\n          , { headers }).then(response => {\r\n            console.log(response.data)\r\n            setIdUser(response.data.data[0]._id)\r\n\r\n          })\r\n            .catch(err => {\r\n              console.log(err)\r\n              setsnackbarType(\"error\")\r\n              setsnackbarMsg(\"Something Went Wrong\")\r\n              setOpen(true);\r\n            })\r\n          setOpen(false);\r\n          setLoading1(false)\r\n        }, 3000)\r\n      }else{\r\n        console.log('not matched')\r\n        setLoading1(true)\r\n        console.log('Not Matched')\r\n        setsnackbarType(\"error\")\r\n        setsnackbarMsg(\"OTP Doesnot matched\")\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n          setLoading1(false)\r\n        }, 3000)\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  const submitHandlerUpdatePass = async (e) => {\r\n    if (newpassword === '') {\r\n      setLoading1(true)\r\n      console.log('Empty Field')\r\n      setsnackbarType(\"error\")\r\n      setsnackbarMsg(\"Please Enter new Password\")\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setLoading1(false)\r\n      }, 3000)\r\n    } else {\r\n      // Start \r\n      setLoading1(true)\r\n\r\n      await axios.put(`${url}api/admin/update-credentials`, {\r\n        email: email,\r\n        password: newpassword,\r\n        _id: IdUser\r\n      }, { headers }).then(response => {\r\n        console.log(response.data)\r\n\r\n        if (response.data.message === \"Updated Successfully\") {\r\n          // console.log(response.data.user._id)\r\n          // localStorage.setItem('items', JSON.stringify(response.data.user._id));\r\n          // navigate('/home')\r\n          setsnackbarType(\"success\")\r\n          setsnackbarMsg(\"Updated Successfully\")\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            setOpen(false);\r\n            setLoading1(false)\r\n            navigate('/')\r\n\r\n          }, 3000)\r\n\r\n        } else {\r\n          setsnackbarType(\"error\")\r\n          setsnackbarMsg(\"Something went Wrong\")\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            setOpen(false);\r\n            setLoading1(false)\r\n          }, 3000)\r\n        }\r\n      })\r\n        .catch(err => {\r\n          console.log(err)\r\n          setsnackbarType(\"error\")\r\n          setsnackbarMsg(\"Something went Wrong\")\r\n          setOpen(true);\r\n          setTimeout(() => {\r\n            setOpen(false);\r\n            setLoading1(false)\r\n          }, 3000)\r\n        })\r\n      // end \r\n    \r\n    }\r\n\r\n\r\n  }\r\n  const [IdUserData,setIdUserData]=useState('')\r\n  const submitHandler = async (e) => {\r\n    e.preventDefault()\r\n    if (email === '') {\r\n      setLoading1(true)\r\n      console.log('Empty Field')\r\n      setsnackbarType(\"error\")\r\n      setsnackbarMsg(\"Please Enter Email to continue\")\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setLoading1(false)\r\n      }, 3000)\r\n\r\n    } else {\r\n      // Loader \r\n      setLoading1(true)\r\n      setTimeout(async () => {\r\n        await axios.post(`${url}api/admin/otpEmail`, {\r\n          email: email,\r\n        }, { headers }).then(response => {\r\n          console.log(response.data)\r\n\r\n          if (response.data.message === \"Please check Your Email Id\") {\r\n            setOtpCode(response.data.otp)\r\n            setsnackbarType(\"success\")\r\n            setsnackbarMsg(\"OTP Send Successfully\")\r\n            setIdUserData(response.data.data._id)\r\n            setOpen(true);\r\n            setTimeout(() => {\r\n              setOpen(false);\r\n              setemailDisabled(true)\r\n              setButtonShowChVerify(true)\r\n              setPasswordField(true)\r\n              setButtonShowChLogin(false)\r\n              setLoading1(false)\r\n            }, 3000)\r\n\r\n          } else if (response.data.message === \"Email Id not Exist\") {\r\n            setLoading1(true)\r\n            console.log('Empty Field')\r\n            setsnackbarType(\"error\")\r\n            setsnackbarMsg(\"Email  Doesnot Exist\")\r\n            setOpen(true);\r\n            setTimeout(() => {\r\n              setOpen(false);\r\n              setLoading1(false)\r\n            }, 3000)\r\n          } else {\r\n            Swal.fire('Something went Wrong')\r\n\r\n          }\r\n\r\n\r\n        })\r\n          .catch(err => {\r\n            console.log(err)\r\n            Swal.fire('Invalid Credentials')\r\n          })\r\n      }, 3000)\r\n      //  POst Request \r\n      // navigate('/home')\r\n\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div>\r\n      < Grid container spacing={2} style={ContainerStyle}>\r\n        <Grid item xs={12} md={4} >\r\n        </Grid>\r\n        <Grid item xs={12} md={4} >\r\n          <Card sx={{ minWidth: 275 }}>\r\n            < Grid container spacing={2} >\r\n              <Grid item xs={12} md={12} style={{ padding: '30px' }}>\r\n                <Grid align='center' style={{ margin: '20px 10px 0px 10px' }}>\r\n                  <Avatar src={image} variant=\"square\" style={logoStyle} ></Avatar>\r\n                  <Typography variant=\"h4\" style={{ color: `${colors.grey[111]}`, fontWeight: 700 }} gutterBottom>\r\n                    Forget Password\r\n                  </Typography>\r\n                  <TextField style={InputStyle} id=\"outlined-basic\" disabled={emailDisabled}\r\n                    value={email}\r\n                    onChange={\r\n                      (e) => setEmail(e.target.value)\r\n                    }\r\n                    label=\"Email\" variant=\"outlined\" required />\r\n                  <br />\r\n                  {PasswordField ?\r\n                    <>\r\n                    <br/>\r\n                      <TextField style={InputStyle} id=\"outlined-basic\"\r\n                        value={password}\r\n                        onChange={\r\n                          (e) => setPassword(e.target.value)\r\n                        }\r\n                        label=\"Enter OTP\" variant=\"outlined\" required />\r\n                        {/* <Typography variant=\"h6\" style={{ color: '#52ad4a',fontStyle:'underlined'}} gutterBottom>\r\n                        Resend OTP\r\n                    </Typography> */}\r\n                      <Typography align='right' variant=\"h6\" style={{ color: 'blue', textDecoration: 'underline', cursor: 'pointer' }} onClick={() => {\r\n                        // navigate('/forget-password')\r\n                        window.location.reload();\r\n                      }} component=\"h2\">\r\n                        Resend OTP\r\n                      </Typography>\r\n                        \r\n\r\n                      <br /></> : <></>\r\n                  }\r\n                  {newPasswordField ?\r\n                    <>\r\n                      <br />\r\n                      <TextField style={InputStyle} id=\"outlined-basic\"\r\n                        value={newpassword}\r\n                        onChange={\r\n                          (e) => setNewPassword(e.target.value)\r\n                        }\r\n                        label=\"Password\" variant=\"outlined\" required />\r\n\r\n                      <br /><br />\r\n                    </> :\r\n                    <>\r\n                    </>}\r\n\r\n                  {ButtonShowChVerify ?\r\n                    <>\r\n                      <Button variant=\"contained\" onClick={\r\n                        submitHandlerOtpVerify\r\n\r\n                      } style={btn} >\r\n                        {loading1 ? <ClipLoader color={color} loading={loading1} css={override} size={10} /> : <h3>Verify </h3>}\r\n                      </Button></>\r\n                    :\r\n                    <>\r\n\r\n                    </>\r\n                  }\r\n                  {ButtonShowChLogin ?\r\n                    <>\r\n                    <br/>\r\n                      <Button variant=\"contained\"  onClick={\r\n                        submitHandler\r\n\r\n                      } style={btn} >\r\n                        {loading1 ? <ClipLoader color={color} loading={loading1} css={override} size={10} /> : <h3>Send Otp </h3>}\r\n                      </Button></> :\r\n                    <></>}\r\n                  {ButtonShowChUpdate ?\r\n                    <>\r\n                      <Button variant=\"contained\" onClick={\r\n                        submitHandlerUpdatePass\r\n\r\n                      } style={btn} >\r\n                        {loading1 ? <ClipLoader color={color} loading={loading1} css={override} size={10} /> : <h3>Update Password </h3>}\r\n                      </Button></> :\r\n                    <></>}\r\n\r\n\r\n\r\n                </Grid>\r\n              </Grid>\r\n\r\n            </Grid>\r\n\r\n          </Card>\r\n        </Grid>\r\n        {/* SnackBar  */}\r\n        <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackbarType} sx={{ width: '100%' }}>\r\n            {snackbarMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n\r\n\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgetPassword\r\n","import { Box, Typography, useTheme, IconButton } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport Header from \"../../components/Header\";\r\nimport Button from '@mui/material/Button';\r\nimport Fade from '@mui/material/Fade';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from '@mui/material/TextField';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport Modal from '@mui/material/Modal';\r\nimport Tooltip from '@mui/material/Tooltip';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport axios from 'axios'\r\nimport Swal from 'sweetalert2'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport { useFormik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport url from \"../url\"\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport {\r\n  DataGrid,\r\n  GridToolbarContainer,\r\n  GridToolbarColumnsButton,\r\n  GridToolbarFilterButton,\r\n  GridToolbarExport,\r\n  GridToolbarDensitySelector,\r\n} from '@mui/x-data-grid';\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst color = \"black\"\r\nconst override = {\r\n  display: ' block',\r\n  margin: '0 auto',\r\n}\r\nconst style = {\r\n  position: 'absolute',\r\n  overflowY:'scroll',\r\n  height:'550px',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  // width: '100%',\r\n  bgcolor: 'beige',\r\n  borderRadius: '10px',\r\n  padding: \"0px 40px 40px 40px\",\r\n  boxShadow: 24,\r\n  // p: 4,\r\n};\r\nconst style1 = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  bgcolor: 'beige',\r\n  borderRadius: '10px',\r\n  boxShadow: 24,\r\n  p: 4,\r\n};\r\n\r\nconst Team = () => {\r\n  const [loading1, setLoading1] = useState(false);\r\n  const [loadingAdd, setLoadingAdd] = useState(false);\r\n  const [hideshowarray, setHideShowArray] = useState(false)\r\n  // SnakBar \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const [snackbarType, setsnackbarType] = useState('')\r\n  const [snackbarMsg, setsnackbarMsg] = useState('')\r\n  // Tabs value\r\n  const navigate = useNavigate();\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [TitleEdit, setTitleEdit] = useState('');\r\n  const [FeaturesEdit, setFeaturesEdit] = useState('');\r\n  const [PriceEdit, setPriceEdit] = useState(0);\r\n  const [NoOfSearchesEdit, setNoOfSearchesEdit] = useState('');\r\n  const [ValidityEdit, setValidityEdit] = useState('');\r\n  // Approve \r\n  const [openAdd, setOpenAdd] = React.useState(false);\r\n  const handleOpenAdd = () => {\r\n    setOpenAdd(true);\r\n  }\r\n  const handleCloseAdd = () => setOpenAdd(false);\r\n  // Update \r\n  const [openUpdate, setOpenUpdate] = React.useState(false);\r\n  const [idData, setIdData] = React.useState('');\r\n\r\n  const handleOpenUpdate = (row) => {\r\n    console.log(row)\r\n\r\n    axios.get(`${url}api/Subscription_plan/get/${row}`)\r\n      .then(response => {\r\n        console.log('response')\r\n        console.log(response.data.result);\r\n        setTitleEdit(response.data.result[0].title)\r\nif(response.data.result[0].features.length===0){\r\n\r\n}else{\r\n  setArrayListEdit(response.data.result[0].features)\r\nsethideshowarrayEdit(true)\r\n}\r\n        setNoOfSearchesEdit(response.data.result[0].num_of_searches)\r\n        setValidityEdit(response.data.result[0].validity)\r\n        setPriceEdit(response.data.result[0].price)\r\n        setIdData(response.data.result[0]._id)\r\n        setOpenUpdate(true);\r\n        setLoading(false)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setsnackbarType(\"error\")\r\n        setsnackbarMsg(err)\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n        }, 3000)\r\n      })\r\n    console.log(row)\r\n  }\r\n  const handleCloseUpdate = () => setOpenUpdate(false);\r\n  // Delete \r\n  // Alert \r\n  const deleteData = (id) => {\r\n    console.log('deleting User')\r\n    console.log(id);\r\n    const swalWithBootstrapButtons = Swal.mixin({\r\n      customClass: {\r\n        confirmButton: 'btn btn-success',\r\n        cancelButton: 'btn btn-danger'\r\n      },\r\n      buttonsStyling: {\r\n        backgroundColor: '#4CAF50', /* Green */\r\n        border: 'none',\r\n        color: 'white',\r\n        padding: '15px 32px',\r\n        textAlign: 'center',\r\n        textDecoration: 'none',\r\n        display: 'inline-block',\r\n        fontSize: '16px'\r\n      }\r\n    })\r\n    swalWithBootstrapButtons.fire({\r\n      title: 'Are you sure?',\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonText: 'Yes, delete it!',\r\n      cancelButtonText: 'No, cancel!',\r\n      reverseButtons: true\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        axios.delete(`${url}api/Subscription_plan/delete/${id}`,\r\n          { headers })\r\n          .then(res => {\r\n            console.log(res);\r\n            console.log(res.data);\r\n            getAllData()\r\n            setsnackbarType(\"success\")\r\n            setsnackbarMsg(\"Subscription Plan Deleted Successfully !\")\r\n            setOpen(true);\r\n            setOpenAdd(false);\r\n            // setOpen1(true);\r\n          }).catch(err => {\r\n            console.log(err)\r\n          })\r\n      } else if (\r\n        result.dismiss === Swal.DismissReason.cancel\r\n      ) {\r\n        swalWithBootstrapButtons.fire(\r\n          'Cancelled',\r\n          'Subcription Plan is safe :)',\r\n          'error'\r\n        )\r\n      }\r\n    })\r\n\r\n  }\r\n  // View \r\n  const handleClickOpenUpdate = () => {\r\n    setLoading1(true)\r\n    if (TitleEdit === ''|| PriceEdit === '' || NoOfSearchesEdit === '' || ValidityEdit === '') {\r\n      setsnackbarType(\"error\")\r\n      setsnackbarMsg(\"Fill All Fields to Continue !\")\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setLoading1(false)\r\n      }, 3000)\r\n    } else {\r\n      let ArrayData = ArrayListEdit\r\n      let nameArr = ArrayData.join(', ');\r\n      console.log(nameArr)\r\n      axios.put(`${url}api/Subscription_plan/update`, {\r\n        _id: idData,\r\n        title: TitleEdit,\r\n        features: nameArr,\r\n        price: PriceEdit,\r\n        num_of_searches: NoOfSearchesEdit,\r\n        validity: ValidityEdit\r\n      }, { headers }).then(response => {\r\n        console.log(response)\r\n        setOpenUpdate(false);\r\n        getAllData()\r\n        setsnackbarType(\"success\")\r\n        setsnackbarMsg(\"Subscription Plan Updated Successfully !\")\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n          setLoading1(false)\r\n        }, 3000)\r\n\r\n      })\r\n        .catch(err => {\r\n          console.log(err)\r\n        })\r\n    }\r\n\r\n  };\r\n  const [tempFeature, setTempFeature] = useState();\r\n\r\n  const [ArrayList, setArrayList] = useState([]);\r\n  const RemoveItem = (arrayData) => {\r\n    setArrayList(oldValues => {\r\n      return oldValues.filter(fruit => fruit !== arrayData)\r\n    })\r\n    console.log(ArrayList)\r\n\r\n\r\n  }\r\n  const RemoveItemEdit = (arrayData) => {\r\n    setArrayListEdit(oldValues => {\r\n      return oldValues.filter(fruit => fruit !== arrayData)\r\n    })\r\n    console.log(ArrayListEdit)\r\n\r\n\r\n  }\r\n  const AddFeatures = () => {\r\n    console.log(tempFeature);\r\n    if (tempFeature === '' || tempFeature === null || tempFeature === undefined) {\r\n      console.log('Empty')\r\n    } else {\r\n      console.log('Not Empty')\r\n\r\n      if (ArrayList.length === 0) {\r\n        setArrayList([tempFeature])\r\n        setTempFeature('')\r\n        setHideShowArray(true)\r\n      } else {\r\n        setArrayList([...ArrayList, tempFeature]);\r\n        setTempFeature('')\r\n\r\n      }\r\n      console.log(ArrayList)\r\n    }\r\n\r\n  }\r\n  const [ArrayListEdit, setArrayListEdit] = useState([]);\r\n  const [hideshowarrayEdit,sethideshowarrayEdit]=useState(false)\r\n  const AddFeaturesEdit = () => {\r\n    console.log(FeaturesEdit);\r\n    if (FeaturesEdit === '' || FeaturesEdit === null || FeaturesEdit === undefined) {\r\n      console.log('Empty')\r\n    } else {\r\n      console.log('Not Empty')\r\n\r\n      if (ArrayListEdit.length === 0) {\r\n        setArrayListEdit([FeaturesEdit])\r\n        setFeaturesEdit('')\r\n        sethideshowarrayEdit(true)\r\n      } else {\r\n        setArrayListEdit([...ArrayListEdit, FeaturesEdit]);\r\n        setFeaturesEdit('')\r\n\r\n      }\r\n      console.log(ArrayListEdit)\r\n    }\r\n  }\r\n  // Formik \r\n  const validationSchema = yup.object({\r\n    title: yup\r\n      .string()\r\n      .required('Required title'),\r\n    Price: yup\r\n      .string('Enter your Price')\r\n      .required('Price is required')\r\n      .matches(\r\n        /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{1,2})?$/,\r\n        \"only numbers \"\r\n      ),\r\n    NoOfSearches: yup\r\n      .string('Enter your NoOfSearches')\r\n      .required('No Of Searches is required')\r\n      .matches(\r\n        /(?=.*?\\d)^\\$?(([1-9]\\d{0,2}(,\\d{3})*)|\\d+)?(\\.\\d{1,2})?$/,\r\n        \"only numbers \"\r\n      ),\r\n    validity: yup\r\n      .string('Enter your validity')\r\n      .required('validity is required'),\r\n\r\n  });\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      title: '',\r\n      Price: '',\r\n      NoOfSearches: '',\r\n      validity: '',\r\n\r\n    },\r\n    validationSchema: validationSchema,\r\n    onSubmit: (values, { resetForm }) => {\r\n      console.log(values)\r\n      console.log(ArrayList)\r\n      let ArrayData = ArrayList\r\n      let nameArr = ArrayData.join(', ');\r\n      console.log(nameArr)\r\n      setLoadingAdd(true)\r\n      setTimeout(() => {\r\n        axios.post(`${url}api/Subscription_plan/create`, {\r\n          title: values.title,\r\n          features: nameArr,\r\n          price: values.Price,\r\n          num_of_searches: values.NoOfSearches,\r\n          validity: values.validity\r\n        }, { headers }).then(response => {\r\n          console.log(response)\r\n          // setData([...data, response.data]);\r\n          getAllData()\r\n          setsnackbarType(\"success\")\r\n          setsnackbarMsg(\"Subscription Plan Created Successfully !\")\r\n          setOpen(true);\r\n          resetForm('')\r\n          setArrayList([])\r\n          setLoadingAdd(false)\r\n          setOpenAdd(false);\r\n\r\n        })\r\n          .catch(err => {\r\n            console.log(err)\r\n            setsnackbarType(\"error\")\r\n            setsnackbarMsg(err)\r\n            setOpen(true);\r\n            setTimeout(() => {\r\n              setOpen(false);\r\n              setLoadingAdd(false)\r\n            }, 3000)\r\n          })\r\n      }, 3000)\r\n\r\n    },\r\n  });\r\n  const columns = [\r\n    {\r\n      field: \"title\",\r\n      headerName: \"Title\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"price\",\r\n      headerName: \"Price\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"num_of_searches\",\r\n      headerName: \"No of Searches\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"validity\",\r\n      headerName: \"Validity\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"features\",\r\n      headerName: \"features\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            {(row.row.features.length === 0) || (row.row.features === undefined) || (row.row.features === null) ? <>\r\n              No Feature Added\r\n            </> :\r\n              <>\r\n                {row.row.features[0]}...\r\n              </>}\r\n          </>\r\n        )\r\n      }\r\n    },\r\n\r\n    {\r\n      field: \"_id\",\r\n      headerName: \"Action\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            <IconButton onClick={() => handleOpenUpdate(row.row._id)}>\r\n              <Tooltip title=\"Edit\">\r\n                <EditIcon />\r\n              </Tooltip>\r\n            </IconButton>\r\n            <IconButton onClick={() => deleteData(row.row._id)}>\r\n              <Tooltip title=\"Delete\">\r\n\r\n                <DeleteIcon style={{ color: 'red' }} />\r\n              </Tooltip>\r\n            </IconButton>\r\n          </>\r\n\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  function CustomToolbar() {\r\n    return (\r\n      <GridToolbarContainer style={{ marginBottom: '5px', backgroundColor: `${colors.primary[600]}` }}>\r\n        <GridToolbarColumnsButton />\r\n        <GridToolbarFilterButton />\r\n        <GridToolbarDensitySelector />\r\n        <GridToolbarExport />\r\n      </GridToolbarContainer>\r\n    );\r\n  }\r\n  //Get API Axios\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [changeView, setChangeView] = useState(true);\r\n\r\n  const getAllData = () => {\r\n    axios.get(`${url}api/Subscription_plan/get-all`)\r\n      .then((response) => {\r\n        const allData = response.data;\r\n        console.log(allData);\r\n        setData(response.data.result);\r\n        // setimagesdata(response.data.images);\r\n        setLoading(false)\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllData();\r\n\r\n  }, []);\r\n  const handleOpenChangeView = () => {\r\n    if (changeView) {\r\n      setChangeView(false)\r\n\r\n    } else {\r\n      setChangeView(true)\r\n\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/home\">\r\n            <HomeIcon />\r\n          </Link>\r\n\r\n          <Typography color=\"text.primary\">Subscription Plan</Typography>\r\n        </Breadcrumbs>\r\n\r\n        <Button variant=\"contained\"\r\n          style={{ backgroundColor: `${colors.grey[400]}` }}\r\n          // color={colors.grey[400]}\r\n          onClick={() => handleOpenAdd()}>\r\n          Add\r\n        </Button>\r\n      </Box>\r\n    <div style={{height:'80vh',overflowY:'scroll'}} mb>\r\n      \r\n      <Box m=\"20px\">\r\n        <Grid container spacing={2} >\r\n          <Grid item xs={12} md={10} mt>\r\n            <Header title=\"Subscription Plan\" subtitle=\"Managing the Plans\" />\r\n\r\n          </Grid>\r\n          <Grid item xs={12} md={2} mt>\r\n            <Button variant=\"contained\"\r\n              style={{ backgroundColor: `${colors.grey[400]}` }}\r\n              // color={colors.grey[400]}\r\n              onClick={() => handleOpenChangeView()}>\r\n              Change View\r\n            </Button>\r\n\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n        <Box sx={{ width: '100%' }}>\r\n\r\n          <Box\r\n            m=\"5px 0 0 0px\"\r\n            height=\"75vh\"\r\n            sx={{\r\n              \"& .MuiDataGrid-root\": {\r\n                border: \"none\",\r\n              },\r\n              \"& .MuiDataGrid-cell\": {\r\n                borderBottom: \"none\",\r\n              },\r\n              \"& .name-column--cell\": {\r\n                color: colors.greenAccent[300],\r\n              },\r\n              \"& .MuiDataGrid-columnHeaders\": {\r\n                backgroundColor: colors.grey[400],\r\n                borderBottom: \"none\",\r\n              },\r\n              \"& .MuiDataGrid-virtualScroller\": {\r\n                backgroundColor: colors.primary[400],\r\n              },\r\n              \"& .MuiDataGrid-footerContainer\": {\r\n                borderTop: \"none\",\r\n                backgroundColor: colors.grey[400],\r\n              },\r\n              \"& .MuiCheckbox-root\": {\r\n                color: `${colors.greenAccent[200]} !important`,\r\n              },\r\n            }}\r\n          >\r\n            {changeView ? <>\r\n              <DataGrid\r\n                // {...data}\r\n\r\n                rows={data}\r\n                columns={columns}\r\n                getRowId={(row) => row._id}\r\n                loading={loading}\r\n                components={{\r\n                  Toolbar: CustomToolbar,\r\n                }}\r\n              />\r\n            </> :\r\n              <>\r\n                {/* data */}\r\n                <Grid container spacing={2} >\r\n                  {data.map((recipie) => (\r\n                    <>\r\n                      <Grid item xs={12} md={4} mt>\r\n                        <Card sx={{ maxWidth: 345,borderRadius:'10px',padding:'10px' }}>\r\n                          {/* <CardHeader\r\n                            title={recipie.title === undefined ? <>Null</> : <>{recipie.title}</>}\r\n                            style={{ borderBottom: `1px solid ${colors.grey[700]}` }}\r\n                          /> */}\r\n                          <CardContent>\r\n                          <Typography variant=\"h5\" fontWeight={700} color=\"text.primary\">\r\n                          {recipie.title === undefined ? <>Null</> : <>{recipie.title}</>}\r\n                            </Typography>\r\n                            <Typography variant=\"h4\" fontWeight={700} color=\"text.secondary\">\r\n                            {recipie.price === undefined ? <>Null</> : <>{recipie.price}</>} $\r\n                            </Typography>\r\n                            <Grid container spacing={2} mt>\r\n                          {recipie.features.map((arrayData) => (\r\n                            <>\r\n                              <Grid item xs={1} md={1}  >\r\n                                <FiberManualRecordIcon style={{fontSize:'12px'}}/>\r\n\r\n                              </Grid>\r\n                              <Grid item xs={11} md={11} >\r\n                                <Typography color={colors.grey[300]} variant=\"h6\" gutterBottom>\r\n                                  {arrayData}\r\n                                </Typography>\r\n                              </Grid>\r\n                            </>\r\n                          ))}\r\n\r\n                        </Grid>\r\n                            {/* <Typography variant=\"h6\" color=\"text.primary\" fontWeight={700} mt={2}>\r\n                              {recipie.features === undefined ? <>Null</> : <>{recipie.features[0]}</>}...\r\n                            </Typography> */}\r\n                           <Typography variant=\"h6\" color=\"text.primary\" mt>\r\n                              No of searches: {recipie.num_of_searches === undefined ? <>Null</> : <>{recipie.num_of_searches}</>}\r\n                            </Typography>\r\n                            <Typography variant=\"h6\" color=\"text.primary\">\r\n                              Validity: {recipie.validity === undefined ? <>Null</> : <>{recipie.validity}</>}\r\n                            </Typography>\r\n                          </CardContent>\r\n                          <CardActions disableSpacing>\r\n                            <IconButton aria-label=\"View\" onClick={() => handleOpenUpdate(recipie._id)}>\r\n                              <EditIcon />\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"Delete\" onClick={() => deleteData(recipie._id)}>\r\n                              <DeleteIcon style={{ color: 'red' }} />\r\n                            </IconButton>\r\n\r\n                          </CardActions>\r\n                        </Card>\r\n                      </Grid>\r\n\r\n                    </>\r\n                  ))}\r\n                </Grid>\r\n\r\n\r\n              </>}\r\n          </Box>\r\n          {/* </TabPanel> */}\r\n\r\n        </Box>\r\n        {/* SnackBar  */}\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackbarType}\r\n            sx={{\r\n              width: '100%'\r\n            }}>\r\n            {snackbarMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n\r\n        {/* Add  */}\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={openAdd}\r\n            onClose={handleCloseAdd}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={openAdd}>\r\n              <Box sx={style}>\r\n                <form onSubmit={formik.handleSubmit} >\r\n                  <Grid container spacing={2} >\r\n                    <Grid item xs={12} md={12} mt={3}>\r\n                      <Typography variant=\"h3\" style={{ color: `${colors.grey[400]}`, fontWeight: 700 }} gutterBottom>\r\n                        Add Subscription Plan\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                        Title\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={9}>\r\n\r\n                      <TextField\r\n                        value={formik.values.title}\r\n                        onChange={(e) => formik.setFieldValue(\"title\", e.target.value)}\r\n                        error={formik.touched.title && Boolean(formik.errors.title)}\r\n                        helperText={formik.touched.title && formik.errors.title}\r\n                        // value={title}\r\n                        style={{ width: '100%' }}\r\n                        // onChange={(e) => \r\n                        //   setTitle(e.target.value)\r\n                        // } \r\n                        id=\"filled-basic\"\r\n                        variant=\"filled\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                        Features\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={7}>\r\n                      <TextField\r\n                        value={tempFeature}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e) => setTempFeature(e.target.value)\r\n                        }\r\n                        id=\"filled-basic\"\r\n                        variant=\"filled\" />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={2}>\r\n\r\n                      <Button variant=\"contained\" style={{ backgroundColor: `${colors.grey[400]}`, width: '60px', height: '50px' }}\r\n                        onClick={() => AddFeatures()\r\n                        }\r\n                      >\r\n                        Add\r\n\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} align=\"left\">\r\n                      {hideshowarray ? <>\r\n                        <Grid container spacing={2}>\r\n                          {ArrayList.map((arrayData) => (\r\n                            <>\r\n                              <Grid item xs={1} md={1} >\r\n                                <FiberManualRecordIcon style={{fontSize:'12px'}}/>\r\n\r\n                              </Grid>\r\n                              <Grid item xs={10} md={10} >\r\n                                <Typography color={colors.grey[300]} variant=\"h6\" gutterBottom>\r\n                                  {arrayData}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={1} md={1} >\r\n                                <RemoveCircleOutlineIcon onClick={() => RemoveItem(arrayData)} style={{ cursor: 'pointer' }} />\r\n                              </Grid>\r\n                            </>\r\n                          ))}\r\n\r\n                        </Grid>\r\n                      </> : <></>}\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                        No of Searches\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={9}>\r\n\r\n                      <TextField\r\n                        value={formik.values.NoOfSearches}\r\n                        onChange={(e) => formik.setFieldValue(\"NoOfSearches\", e.target.value)}\r\n                        error={formik.touched.NoOfSearches && Boolean(formik.errors.NoOfSearches)}\r\n                        helperText={formik.touched.NoOfSearches && formik.errors.NoOfSearches}\r\n                        //  value={NoOfSearches} \r\n                        style={{ width: '100%' }}\r\n                        // onChange={(e) => setNoOfSearches(e.target.value)\r\n                        // } \r\n                        id=\"filled-basic\" variant=\"filled\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                        Validity\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={9}>\r\n\r\n                      <TextField\r\n                        value={formik.values.validity}\r\n                        onChange={(e) => formik.setFieldValue(\"validity\", e.target.value)}\r\n                        error={formik.touched.validity && Boolean(formik.errors.validity)}\r\n                        helperText={formik.touched.validity && formik.errors.validity}\r\n                        // value={validity}\r\n                        style={{ width: '100%' }}\r\n                        id=\"filled-basic\" variant=\"filled\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={3}>\r\n                      <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                        Price\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={9}>\r\n                      <TextField\r\n                        value={formik.values.Price}\r\n                        onChange={(e) => formik.setFieldValue(\"Price\", e.target.value)}\r\n                        error={formik.touched.Price && Boolean(formik.errors.Price)}\r\n                        helperText={formik.touched.Price && formik.errors.Price}\r\n                        //  value={Price}\r\n                        style={{ width: '100%' }}\r\n                        id=\"filled-basic\" variant=\"filled\" />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} align=\"center\">\r\n\r\n                      <Button variant=\"contained\" type=\"submit\" style={{ backgroundColor: `${colors.grey[400]}`, width: '100px', height: '50px' }}\r\n                      >\r\n                        {loadingAdd ? <ClipLoader color={color} loading={loadingAdd} css={override} size={30} /> : <h3>Submit</h3>}\r\n\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </Box>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        {/* Update  */}\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={openUpdate}\r\n            onClose={handleCloseUpdate}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={openUpdate}>\r\n              <Box sx={style}>\r\n\r\n                <Grid container spacing={2} >\r\n                  <Grid item xs={12} md={12} mt={3}>\r\n                    <Typography variant=\"h3\" style={{ color: `${colors.grey[400]}`, fontWeight: 700 }} gutterBottom>\r\n                      Edit Subscription Plan\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={3}>\r\n                    <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                      Title\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={9}>\r\n                    <TextField value={TitleEdit} style={{ width: '100%' }}\r\n                      onChange={(e) => setTitleEdit(e.target.value)\r\n                      } id=\"filled-basic\" variant=\"filled\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={3}>\r\n                    <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                      Features\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={7}>\r\n                    {/* featutres  */}\r\n                    {/* <form onSubmit={handleSubmit}> */}\r\n                    <TextField value={FeaturesEdit} style={{ width: '100%' }}\r\n                      onChange={(e) => setFeaturesEdit(e.target.value)\r\n                      } id=\"filled-basic\"\r\n                      variant=\"filled\" />\r\n\r\n                  </Grid>\r\n                  <Grid item xs={12} md={2}>\r\n                    <Button variant=\"contained\" style={{ backgroundColor: `${colors.grey[400]}`, width: '60px', height: '50px' }}\r\n                      onClick={() => AddFeaturesEdit()\r\n                      }\r\n                    >\r\n                      Add\r\n\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={12} align=\"left\" style={{padding:'20px'}}>\r\n                      {hideshowarrayEdit ? <>\r\n                        <Grid container spacing={2}>\r\n                          {ArrayListEdit.map((arrayData) => (\r\n                            <>\r\n                              <Grid item xs={1} md={1} >\r\n                                <FiberManualRecordIcon style={{fontSize:'12px'}}/>\r\n                              </Grid>\r\n                              <Grid item xs={10} md={10} >\r\n                                <Typography color={colors.grey[300]} variant=\"h6\" gutterBottom>\r\n                                  {arrayData}\r\n                                </Typography>\r\n                              </Grid>\r\n                              <Grid item xs={1} md={1} >\r\n                                <RemoveCircleOutlineIcon onClick={() => RemoveItemEdit(arrayData)} style={{ cursor: 'pointer' }} />\r\n                              </Grid>\r\n                            </>\r\n                          ))}\r\n\r\n                        </Grid>\r\n                      </> : <></>}\r\n\r\n\r\n                    </Grid>\r\n                  <Grid item xs={12} md={3}>\r\n                    <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                      No of Searches\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={9}>\r\n\r\n                    <TextField value={NoOfSearchesEdit} style={{ width: '100%' }}\r\n                      onChange={(e) => setNoOfSearchesEdit(e.target.value)\r\n                      } id=\"filled-basic\" variant=\"filled\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={3}>\r\n                    <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                      Validity\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={9}>\r\n\r\n                    <TextField value={ValidityEdit} style={{ width: '100%' }}\r\n                      onChange={(e) => setValidityEdit(e.target.value)\r\n                      } id=\"filled-basic\" variant=\"filled\" />\r\n                  </Grid>\r\n\r\n\r\n                  <Grid item xs={12} md={3}>\r\n                    <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                      Price\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={12} md={9}>\r\n\r\n                    <TextField value={PriceEdit} style={{ width: '100%' }}\r\n                      onChange={(e) => setPriceEdit(e.target.value)\r\n                      } id=\"filled-basic\" variant=\"filled\" />\r\n                  </Grid>\r\n                  <Grid item xs={12} md={12} align=\"center\">\r\n                    <Button variant=\"contained\" style={{ backgroundColor: `${colors.grey[400]}`, width: '100px', height: '50px' }} onClick={() => handleClickOpenUpdate()}>\r\n                      {loading1 ? <ClipLoader color={color} loading={loading1} css={override} size={30} /> : <h3>Update</h3>}\r\n\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n      </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import { Box, Typography, useTheme, IconButton } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport Header from \"../../components/Header\";\r\nimport Button from '@mui/material/Button';\r\nimport Fade from '@mui/material/Fade';\r\nimport axios from 'axios'\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport url from '../url'\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Team = () => {\r\n  const editorRef = useRef(null);\r\n  const log = () => {\r\n    console.log(editorRef.current)\r\n    if (editorRef.current) {\r\n      console.log(editorRef.current.getContent());\r\n    }\r\n  };\r\n  const [html, setHtml] = useState('');\r\n  const [UserId, setUserId] = useState('');\r\n\r\n  const onChange = (e) => {\r\n    console.log(e)\r\n    setHtml(e);\r\n  }\r\n  // end \r\n // SnakBar \r\n const [open, setOpen] = React.useState(false);\r\n\r\n const handleClose = (event, reason) => {\r\n   if (reason === 'clickaway') {\r\n     return;\r\n   }\r\n   setOpen(false);\r\n };\r\n const [snackbarType, setsnackbarType] = useState('')\r\n const [snackbarMsg, setsnackbarMsg] = useState('')\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const savePrivacyPolicy = () => {\r\n    console.log(UserId)\r\n    axios.put(`${url}api/Privacy_Policy/update`, {\r\n      _id: UserId,\r\n      PrivacyPolicy: html,\r\n\r\n    })\r\n      .then((response) => {\r\n        const allData = response.data;\r\n        console.log(allData);\r\n        getAllData()\r\n        setsnackbarType(\"success\")\r\n        setsnackbarMsg(\"Updated Successfully !\")\r\n        setOpen(true);\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n  const getAllData = () => {\r\n    // const items = JSON.parse(localStorage.getItem('items'));\r\n    axios.get(`${url}api/Privacy_Policy/get-all`)\r\n      .then((response) => {\r\n        const allData = response.data.result.PrivacyPolicy;\r\n        console.log(allData);\r\n        setUserId(response.data.result._id)\r\n        console.log(\"response.data.result._id\")\r\n        console.log(response.data.result._id)\r\n        var Str = response.data.result.PrivacyPolicy\r\n        let newStr = Str.split('&lt;').join(\"<\")\r\n        console.log(\"newStr\")\r\n        console.log(newStr)\r\n        setHtml(newStr);\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllData();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/\">\r\n            <HomeIcon />\r\n          </Link>\r\n\r\n          <Typography color=\"text.primary\">Privacy Policy</Typography>\r\n        </Breadcrumbs>\r\n\r\n      </Box>\r\n      <div style={{ height: '80vh', overflowY: 'scroll' }} mb>\r\n\r\n        <Box m=\"20px\">\r\n          <Header title=\"Privacy Policy\" subtitle=\"Managing the Policy\" />\r\n          <div>\r\n            <Editor\r\n              onEditorChange={(e)=>setHtml(e)}\r\n              // onChange={(e)=>setHtml(e)}\r\n              // onInit={(evt, editor) => {\r\n              //   editorRef.current = editor\r\n              // }}\r\n              initialValue={html}\r\n              init={{\r\n                height: 500,\r\n                menubar: false,\r\n                plugins: [\r\n                  'advlist autolink lists link image charmap print preview anchor',\r\n                  'searchreplace visualblocks code fullscreen',\r\n                  'insertdatetime media table paste code help wordcount'\r\n                ],\r\n                toolbar: 'undo redo | formatselect | ' +\r\n                  'bold italic backcolor | alignleft aligncenter ' +\r\n                  'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                  'removeformat | help',\r\n                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n              }}\r\n              //  value={html} onChange={onChange}\r\n              apiKey='qxhendwylskzh47hup0n8l73co1es3qd3ju5ra3gco7ch9qk' />\r\n\r\n            < Grid container spacing={2} >\r\n              <Grid item xs={12} md={12} >\r\n                <Button variant=\"outlined\" onClick={() => savePrivacyPolicy()}>\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          {/* snackbar bar */}\r\n          <div>\r\n             {/* SnackBar  */}\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackbarType}\r\n            sx={{\r\n              width: '100%'\r\n            }}>\r\n            {snackbarMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n          </div>\r\n          {/* </Box> */}\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport Header from \"../../components/Header\";\r\nimport Button from '@mui/material/Button';\r\nimport axios from 'axios'\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport url from '../url'\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst Team = () => {\r\n  const [html, setHtml] = useState('');\r\n  const [UserId, setUserId] = useState('');\r\n\r\n    // SnakBar \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = (event, reason) => {\r\n      if (reason === 'clickaway') {\r\n        return;\r\n      }\r\n      setOpen(false);\r\n    };\r\n  // end \r\n\r\n   const [snackbarType, setsnackbarType] = useState('')\r\n   const [snackbarMsg, setsnackbarMsg] = useState('')\r\n  const savePrivacyPolicy = () => {\r\n    console.log(UserId)\r\n    axios.put(`${url}api/Terms_and_conditions/update`, {\r\n      _id: UserId,\r\n      TermsAndCondition: html,\r\n\r\n    })\r\n      .then((response) => {\r\n        const allData = response.data;\r\n        console.log(allData);\r\n        getAllData()\r\n        setsnackbarType(\"success\")\r\n        setsnackbarMsg(\"Updated Successfully !\")\r\n        setOpen(true);\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n  const getAllData = () => {\r\n    // const items = JSON.parse(localStorage.getItem('items'));\r\n    axios.get(`${url}api/Terms_and_conditions/get-all`)\r\n      .then((response) => {\r\n        const allData = response.data.result.TermsAndCondition;\r\n        console.log(allData);\r\n        setUserId(response.data.result._id)\r\n        console.log(\"response.data.result._id\")\r\n        console.log(response.data.result._id)\r\n        var Str = response.data.result.TermsAndCondition\r\n        let newStr = Str.split('&lt;').join(\"<\")\r\n        console.log(\"newStr\")\r\n        console.log(newStr)\r\n        setHtml(newStr);\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllData();\r\n\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/\">\r\n            <HomeIcon />\r\n          </Link>\r\n          <Typography color=\"text.primary\">Terms And Conditions</Typography>\r\n        </Breadcrumbs>\r\n\r\n      </Box>\r\n      <div style={{ height: '80vh', overflowY: 'scroll' }} mb>\r\n\r\n        <Box m=\"20px\">\r\n          <Header title=\"Terms And Conditions\" subtitle=\"Managing the Terms \" />\r\n          <div>\r\n            <Editor\r\n              onEditorChange={(e)=>setHtml(e)}\r\n              // onChange={(e)=>setHtml(e)}\r\n              // onInit={(evt, editor) => {\r\n              //   editorRef.current = editor\r\n              // }}\r\n              initialValue={html}\r\n              init={{\r\n                height: 500,\r\n                menubar: false,\r\n                plugins: [\r\n                  'advlist autolink lists link image charmap print preview anchor',\r\n                  'searchreplace visualblocks code fullscreen',\r\n                  'insertdatetime media table paste code help wordcount'\r\n                ],\r\n                toolbar: 'undo redo | formatselect | ' +\r\n                  'bold italic backcolor | alignleft aligncenter ' +\r\n                  'alignright alignjustify | bullist numlist outdent indent | ' +\r\n                  'removeformat | help',\r\n                content_style: 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }'\r\n              }}\r\n              //  value={html} onChange={onChange}\r\n              apiKey='qxhendwylskzh47hup0n8l73co1es3qd3ju5ra3gco7ch9qk' />\r\n\r\n            < Grid container spacing={2} >\r\n              <Grid item xs={12} md={12} >\r\n                <Button variant=\"outlined\" onClick={() => savePrivacyPolicy()}>\r\n                  Save\r\n                </Button>\r\n              </Grid>\r\n\r\n              <Grid item xs={12} md={12} >\r\n\r\n                {/* <ReactQuill theme=\"snow\" value={html} style={{height:'300px',overflowY:'scroll'}} onChange={(e)=>setHtml(e)} />; */}\r\n              </Grid>\r\n              <Grid item xs={12} md={12} >\r\n                {/* <textarea id=\"default\">Hello, World!</textarea> */}\r\n                {/* <ReactQuill  theme=\"snow\" value={html} style={{height:'300px',overflowY:'scroll'}} onChange={(e)=>setHtml(e)} />; */}\r\n              </Grid>\r\n            </Grid>\r\n          </div>\r\n          {/* snackbar bar */}\r\n          <div>\r\n            {/* SnackBar  */}\r\n        <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={open} autoHideDuration={3000} onClose={handleClose}>\r\n          <Alert onClose={handleClose} severity={snackbarType}\r\n            sx={{\r\n              width: '100%'\r\n            }}>\r\n            {snackbarMsg}\r\n          </Alert>\r\n        </Snackbar>\r\n          </div>\r\n          {/* </Box> */}\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport url from \"../url\"\r\nimport axios from \"axios\"\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport { useLocation } from 'react-router-dom';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport List from '@mui/material/List';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemButton from '@mui/material/ListItemButton';\r\nimport Modal from '@mui/material/Modal';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport HeartBrokenIcon from '@mui/icons-material/HeartBroken';\r\nimport Fade from '@mui/material/Fade';\r\nimport Backdrop from '@mui/material/Backdrop';\r\n\r\nimport {\r\n  DataGrid,\r\n} from '@mui/x-data-grid';\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  overflowY: 'scroll',\r\n  height: '550px',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  // width: '100%',\r\n  bgcolor: 'beige',\r\n  borderRadius: '10px',\r\n  padding: \"0px 40px 40px 40px\",\r\n  boxShadow: 24,\r\n  // p: 4,\r\n};\r\nconst CustomerView = () => {\r\n  const { state } = useLocation();\r\n  const [type_of_customer, settype_of_customer] = useState('')\r\n  const [name, setname] = useState('')\r\n  const [dataOrders, setdataOrders] = useState([])\r\n  const [dataChats, setdataChats] = useState([])\r\n\r\n\r\n  const getAllData = () => {\r\n\r\n    axios.get(`${url}api/user/get-user-by-ID/${state.idData}`)\r\n      .then((response) => {\r\n        console.log(response.data.result[0])\r\n        if (response.data.result[0].verified_status) {\r\n          settype_of_customer('Verified profile')\r\n        } else {\r\n          settype_of_customer('Not Verified')\r\n\r\n        }\r\n        setname(response.data.result[0].email)\r\n        setLoading(false)\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n  }\r\n  const getAllDataSP = () => {\r\n\r\n    axios.post(`${url}api/UserSubscription/getByUserId`, {\r\n      userId: state.idData\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data.result)\r\n        setdataOrders(response.data.result)\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n  }\r\n  const getAllDataSPChat = () => {\r\n\r\n    axios.post(`${url}api/room/get-room-by-user-id`, {\r\n      user_id: state.idData\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data.result)\r\n        setdataChats(response.data.result)\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n  }\r\n  useEffect(() => {\r\n    getAllData();\r\n    getAllDataSP();\r\n    getAllDataSPChat();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n  const theme = useTheme();\r\n\r\n  const colors = tokens(theme.palette.mode);\r\n\r\n  const [loading, setLoading] = useState(true)\r\n  const columns = [\r\n\r\n    {\r\n      field: \"subscriptionPlan\",\r\n      headerName: \"subscriptionPlan\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            {(row.row.subscriptionPlan === undefined) || (row.row.subscriptionPlan === null) ? <>\r\n              Null\r\n            </> :\r\n              <>\r\n                {row.row.subscriptionPlan.title}\r\n              </>}\r\n          </>\r\n        )\r\n      }\r\n    },\r\n    {\r\n      field: \"started_at\",\r\n      headerName: \"started_at\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"ended_at\",\r\n      headerName: \"ended_at\",\r\n      flex: 1,\r\n    },\r\n    {\r\n      field: \"valid\",\r\n      headerName: \"valid\",\r\n      flex: 1,\r\n      renderCell: (row) => {\r\n        return (\r\n          <>\r\n            {(row.row.valid) ? <>\r\n              Valid\r\n            </> :\r\n              <>\r\n                Invalid\r\n              </>}\r\n          </>\r\n        )\r\n      }\r\n    },\r\n\r\n  ];\r\n  // Selected Chat \r\n  const [selectedIndex, setSelectedIndex] = React.useState(1);\r\n  const [MessagesChat, setMessagesChat] = React.useState([]);\r\n  const [openAdd, setOpenAdd] = React.useState(false);\r\n  const [chatTitleView, setChatTitleView] = useState('');\r\n\r\n  const handleCloseAdd = () => setOpenAdd(false);\r\n  const handleListItemClick = (event, index) => {\r\n    console.log(index)\r\n    setSelectedIndex(index._id);\r\n    setMessagesChat(index.messages)\r\n    setChatTitleView(index.title_room)\r\n    setOpenAdd(true);\r\n\r\n\r\n  };\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/\">\r\n            <HomeIcon />\r\n          </Link>\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/users\">\r\n            {/* <HomeIcon /> */}\r\n            Users\r\n          </Link>\r\n\r\n\r\n          <Typography color=\"text.primary\">{name === undefined ? <span>NULL</span> : name}</Typography>\r\n        </Breadcrumbs>\r\n\r\n      </Box>\r\n      <div style={{ height: '550px', overflowY: 'scroll' }}>\r\n        {/* <Box m=\"20px\" > */}\r\n        <Grid container spacing={2}>\r\n\r\n          <Grid item xs={12} md={12}>\r\n            <Box\r\n              sx={{\r\n                backgroundColor: `${colors.blueAccent[900]}`,\r\n                border: '1px solid #f1eded',\r\n                marginBottom: '14px',\r\n                padding: '10px',\r\n                borderRadius: '6px',\r\n              }}\r\n            >\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12} md={4}>\r\n                  <Box\r\n                    sx={{\r\n                      backgroundColor: `${colors.primary[400]}`,\r\n                      border: '2px solid #dee2e6',\r\n                      marginBottom: '14px',\r\n                      padding: '20px',\r\n                      borderRadius: '6px',\r\n\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} md={4}>\r\n                        <Avatar style={{ height: '80px', width: '80px', backgroundColor: `${colors.blueAccent[800]}`, color: `${colors.grey[100]}`, borderRadius: '50%' }}>\r\n                          <PersonIcon fontSize='large' />\r\n                        </Avatar>\r\n\r\n                      </Grid>\r\n                      <Grid item xs={12} md={8}>\r\n                        <Typography\r\n                          variant=\"h3\"\r\n                          color=\"rgb(62 67 76)\"\r\n                          fontWeight=\"bolder\"\r\n                          sx={{\r\n                            m: \"0 0 5px 0\",\r\n                            fontSize: '17px'\r\n                          }}\r\n                        >\r\n                          Profile Info\r\n\r\n                        </Typography>\r\n\r\n                        <Typography\r\n                          color=\"rgb(123, 128, 154)\"\r\n                          sx={{\r\n                            m: \"0 0 5px 0\",\r\n                            fontSize: '15px'\r\n                          }}\r\n                        >\r\n                          {name === undefined ? <span>NULL</span> : name}\r\n\r\n                        </Typography>\r\n                        <Typography\r\n                          color=\"rgb(123, 128, 154)\"\r\n                          sx={{\r\n                            m: \"0 0 5px 0\",\r\n                            fontSize: '15px'\r\n                          }}\r\n                        >\r\n                          {type_of_customer === undefined ? <span>NULL</span> : type_of_customer}\r\n\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n\r\n\r\n                    </Grid>\r\n                  </Box>\r\n                  <Box\r\n                    sx={{\r\n                      backgroundColor: `${colors.primary[400]}`,\r\n                      border: '2px solid #dee2e6',\r\n                      marginBottom: '14px',\r\n                      padding: '20px',\r\n                      borderRadius: '6px',\r\n\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2}>\r\n\r\n                      <Grid item xs={12} md={12}>\r\n                        <Typography\r\n                          variant=\"h3\"\r\n                          color=\"rgb(62 67 76)\"\r\n                          fontWeight=\"bolder\"\r\n                          sx={{\r\n                            m: \"0 0 5px 0\",\r\n                            fontSize: '17px'\r\n                          }}\r\n                        >\r\n                          User Chat Rooms\r\n\r\n                        </Typography>\r\n                        {/* List Start  */}\r\n                        <List sx={{ width: '100%', maxWidth: 360, bgcolor: 'background.paper', height: '200px', overflowY: 'scroll' }}>\r\n                          {dataChats.map((row) => (\r\n                            <>\r\n                              <ListItemButton style={{ borderBottom: '.5px solid rgb(209 209 209)', cursor: 'pointer' }}\r\n                                // onClick={()=>console.log(row)}\r\n                                selected={selectedIndex === row._id}\r\n                                onClick={(event) => handleListItemClick(event, row)}\r\n                              >\r\n                                <ListItemText primary={row.title_room === undefined ? <>Null</> : <>{row.title_room}</>}\r\n                                  secondary={row.messages === undefined ? <>Null</> : <>Total Messages:{row.messages.length}</>} />\r\n                              </ListItemButton>\r\n                              {/* <ListItem alignItems=\"flex-start\" style={{borderBottom:'.5px solid rgb(209 209 209)',cursor:'pointer'}}>\r\n                              <ListItemText\r\n                                primary={row.title_room===undefined?<>Null</>:<>{row.title_room}</>}\r\n                                secondary={row.messages===undefined?<>Null</>:<>Total Messages:{row.messages.length}</>}\r\n                              />\r\n                            </ListItem> */}\r\n                            </>\r\n                          ))}\r\n                        \r\n                        </List>\r\n                        {/* List End  */}\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={8}>\r\n                  <Box\r\n                    sx={{\r\n                      backgroundColor: `${colors.primary[400]}`,\r\n                      border: '2px solid #f1eded',\r\n                      marginBottom: '14px',\r\n                      padding: '20px',\r\n                      borderRadius: '6px',\r\n\r\n                    }}\r\n                  >\r\n                    <Grid container spacing={2}>\r\n                      <Grid item xs={12} md={10}>\r\n                        <Typography\r\n                          color=\"rgb(62 67 76)\"\r\n                          sx={{\r\n                            m: \"0 0 5px 0\",\r\n                            fontSize: '17px',\r\n                            fontWeight: 700\r\n                          }}\r\n                        >\r\n                          Subscription History\r\n\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs={12} md={12}>\r\n                        <Box\r\n                          m=\"5px 0 0 0px\"\r\n                          height=\"300px\"\r\n                          sx={{\r\n                            overflowY: 'scroll',\r\n                            \"& .MuiDataGrid-root\": {\r\n                              border: \"none\",\r\n                            },\r\n                            \"& .MuiDataGrid-cell\": {\r\n                              borderBottom: \"none\",\r\n                            },\r\n                            \"& .name-column--cell\": {\r\n                              color: colors.greenAccent[300],\r\n                            },\r\n                            \"& .MuiDataGrid-columnHeaders\": {\r\n                              backgroundColor: colors.grey[400],\r\n                              borderBottom: \"none\",\r\n                            },\r\n                            \"& .MuiDataGrid-virtualScroller\": {\r\n                              backgroundColor: colors.primary[400],\r\n                            },\r\n                            \"& .MuiDataGrid-footerContainer\": {\r\n                              borderTop: \"none\",\r\n                              backgroundColor: colors.grey[400],\r\n                            },\r\n                            \"& .MuiCheckbox-root\": {\r\n                              color: `${colors.greenAccent[200]} !important`,\r\n                            },\r\n                          }}\r\n                        >\r\n                          <DataGrid\r\n                            // {...data}\r\n\r\n                            rows={dataOrders}\r\n                            columns={columns}\r\n                            getRowId={(row) => row._id}\r\n                            loading={loading}\r\n\r\n                          />\r\n                        </Box>\r\n\r\n                      </Grid>\r\n                      {/* <Grid item xs={12} md={2}>\r\n                        <Typography\r\n                          color=\"rgb(123, 128, 154)\"\r\n                          sx={{\r\n                            m: \"0 0 5px 0\",\r\n                            fontSize: '17px',\r\n                            fontWeight: 500\r\n                          }}\r\n                        >\r\n                          {customer_filer_status}\r\n\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n\r\n                      <Grid item xs={12} md={12} style={{ display: 'flex', flexDirection: 'row', justifyContent: \"space-between\" }}>\r\n                        <Typography\r\n                          sx={{\r\n                            fontSize: '15px',\r\n                            color: `${colors.grey[200]}`\r\n\r\n                          }}\r\n                        >\r\n                          Account No\r\n\r\n                        </Typography>\r\n                        <Typography\r\n                          sx={{\r\n                            fontSize: '17px',\r\n                            fontWeight: 500,\r\n                            color: `${colors.grey[200]}`\r\n                          }}\r\n                        >\r\n                          {account_number}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n\r\n\r\n                      <Grid item xs={12} md={12} style={{ display: 'flex', flexDirection: 'row', justifyContent: \"space-between\" }}>\r\n                        <Typography\r\n                          sx={{\r\n                            fontSize: '15px',\r\n                            color: `${colors.grey[200]}`\r\n\r\n                          }}\r\n                        >\r\n                          Sales Tax Number\r\n\r\n                        </Typography>\r\n                        <Typography\r\n\r\n                          sx={{\r\n                            fontSize: '17px',\r\n                            fontWeight: 500,\r\n                            color: `${colors.grey[200]}`\r\n\r\n                          }}\r\n                        >\r\n                          {sales_tax_number}\r\n                        </Typography>\r\n                      </Grid>\r\n\r\n\r\n                      <Grid item xs={12} md={12} style={{ display: 'flex', flexDirection: 'row', justifyContent: \"space-between\" }}>\r\n                        <Typography\r\n                          sx={{\r\n                            fontSize: '15px',\r\n                            color: `${colors.grey[200]}`\r\n\r\n                          }}\r\n                        >\r\n                          Tax Payable\r\n\r\n                        </Typography>\r\n                        <Typography\r\n\r\n                          sx={{\r\n                            m: \"0 0 5px 0\",\r\n                            fontSize: '17px',\r\n                            fontWeight: 500,\r\n                            color: `${colors.grey[200]}`\r\n\r\n                          }}\r\n                        >\r\n                          {tax_payable}\r\n                        </Typography>\r\n                      </Grid> */}\r\n\r\n                    </Grid>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n        <div>\r\n          <Modal\r\n            aria-labelledby=\"transition-modal-title\"\r\n            aria-describedby=\"transition-modal-description\"\r\n            open={openAdd}\r\n            onClose={handleCloseAdd}\r\n            closeAfterTransition\r\n            BackdropComponent={Backdrop}\r\n            BackdropProps={{\r\n              timeout: 500,\r\n            }}\r\n          >\r\n            <Fade in={openAdd}>\r\n              <Box sx={style}>\r\n                <Grid container spacing={2} >\r\n                  <Grid item xs={12} md={12} mt={3}>\r\n                    <Typography variant=\"h4\" style={{ color: `${colors.grey[400]}`, fontWeight: 700 }} gutterBottom>\r\n                      {chatTitleView}\r\n                    </Typography>\r\n\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} md={12} mt style={{ height: '400px', overflowY: 'scroll' }}>\r\n                    <Grid container spacing={2} >\r\n                      {MessagesChat.map((row) => (\r\n                        <>\r\n                          {row.sent_by === 'system' ? <>\r\n                            <Grid item xs={12} md={12} mt={1} align=\"right\" >\r\n                              <div\r\n                                style={{ backgroundColor: `${colors.grey[900]}`, width: '100%', border: '1px solid black', padding: '5px', borderRadius: '10px' }}>\r\n                                  <Typography color={colors.grey[700]} style={{fontSize:'12px'}}  gutterBottom>\r\n                                    Chat-GPT\r\n                                </Typography>\r\n                                <Typography color={colors.grey[300]} variant=\"h6\" gutterBottom>\r\n                                {row.message}\r\n                                </Typography>\r\n                                <Typography color={colors.grey[700]} style={{fontSize:'10px'}} >\r\n                                   {row.status==='liked'?<><FavoriteIcon/></>:<></>}\r\n                                   {row.status==='unliked'?<><HeartBrokenIcon/></>:<></>}\r\n                                   {/* {row.status==='none'?<></>:<></>} */}\r\n\r\n\r\n                                </Typography>\r\n                               </div>\r\n                            </Grid>\r\n                          </>\r\n                            :\r\n                            <>\r\n                            <Grid item xs={12} md={12} mt={1} align=\"left\" >\r\n                            <div\r\n                              style={{ backgroundColor: `${colors.grey[700]}`, width: '100%', border: '1px solid black', padding: '5px', borderRadius: '10px' }}>\r\n                              <Typography color={colors.grey[200]} style={{fontSize:'12px'}}  gutterBottom>\r\n                                    {name}\r\n                                </Typography>\r\n                                <Typography color={colors.grey[100]} variant=\"h6\"  gutterBottom>\r\n                                {row.message}\r\n                                </Typography>\r\n                              </div>\r\n                          </Grid>\r\n                          </>\r\n                          }\r\n                        </>\r\n                      ))}\r\n\r\n                    </Grid>\r\n\r\n\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            </Fade>\r\n          </Modal>\r\n        </div>\r\n        {/* </Box> */}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomerView;\r\n","import { Box, Typography, useTheme } from \"@mui/material\";\r\nimport { tokens } from \"../../theme\";\r\nimport Header from \"../../components/Header\";\r\nimport Button from '@mui/material/Button';\r\nimport Fade from '@mui/material/Fade';\r\nimport Backdrop from '@mui/material/Backdrop';\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Modal from '@mui/material/Modal';\r\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\r\nimport Link from '@mui/material/Link';\r\nimport HomeIcon from '@mui/icons-material/Home';\r\nimport axios from 'axios'\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport MuiAlert from '@mui/material/Alert';\r\nimport url from \"../url\"\r\nimport React, { useEffect, useState } from 'react'\r\nimport Card from '@mui/material/Card';\r\nimport CardHeader from '@mui/material/CardHeader';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport RemoveCircleOutlineIcon from '@mui/icons-material/RemoveCircleOutline';\r\nimport FiberManualRecordIcon from '@mui/icons-material/FiberManualRecord';\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Alert = React.forwardRef(function Alert(props, ref) {\r\n  return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\r\n});\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  bgcolor: 'beige',\r\n  borderRadius: '10px',\r\n  padding: \"0px 40px 40px 40px\",\r\n  boxShadow: 24,\r\n};\r\nconst color = \"black\"\r\nconst override = {\r\n  display: ' block',\r\n  margin: '0 auto',\r\n}\r\nconst Team = () => {\r\n  const [loadingAdd, setLoadingAdd] = useState(false);\r\n\r\n  // SnakBar \r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    setOpen(false);\r\n  };\r\n  const [snackbarType, setsnackbarType] = useState('')\r\n  const [snackbarMsg, setsnackbarMsg] = useState('')\r\n  // Tabs value\r\n\r\n\r\n  const headers = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n  const theme = useTheme();\r\n  const colors = tokens(theme.palette.mode);\r\n  const [hideshowarray, setHideShowArray] = useState(false)\r\n  // Approve \r\n  const [openAdd, setOpenAdd] = React.useState(false);\r\n  const handleOpenAdd = () => {\r\n    setOpenAdd(true);\r\n  }\r\n  const handleCloseAdd = () => setOpenAdd(false);\r\n  // Update \r\n  // Submit \r\n  const submitHandler = async () => {\r\n    setLoadingAdd(true)\r\n\r\n    setTimeout(() => {\r\n    axios.post(`${url}api/AppUpdates/create`, {\r\n      // images: selectedFile1,\r\n      added_by: adminId,\r\n      profile_image: adminProfileImg,\r\n      name: adminName,\r\n      notes: ArrayList\r\n\r\n    }, { headers }).then(response => {\r\n      console.log(response)\r\n      setOpenAdd(false);\r\n      // setData([...data, response.data]);\r\n      getAllData()\r\n      setsnackbarType(\"success\")\r\n      setsnackbarMsg(\"App Updates Created Successfully\")\r\n      setOpen(true);\r\n      setTimeout(() => {\r\n        setOpen(false);\r\n        setLoadingAdd(false)\r\n      }, 3000)\r\n\r\n    \r\n    })\r\n      .catch(err => {\r\n        console.log(err)\r\n        setsnackbarType(\"error\")\r\n        setsnackbarMsg(err)\r\n        setOpen(true);\r\n        setTimeout(() => {\r\n          setOpen(false);\r\n          setLoadingAdd(false)\r\n        }, 3000)\r\n      })\r\n  }, 3000)\r\n  }\r\n\r\n  //Get API Axios\r\n  const [data, setData] = useState([]);\r\n\r\n  const getAllData = () => {\r\n    axios.get(`${url}api/AppUpdates/get-all`)\r\n      .then((response) => {\r\n        const allData = response.data;\r\n        console.log(allData);\r\n        setData(response.data.result);\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n\r\n  }\r\n  const [adminId, setAdminId] = useState(\"\");\r\n  const [adminName, setAdminName] = useState(\"\");\r\n  const [adminProfileImg, setAdminProfileImg] = useState(\"\");\r\n\r\n  const getAdminLogin = (items) => {\r\n    axios.get(`${url}api/admin/get-admin-by-ID/${items}`\r\n    )\r\n      .then((response) => {\r\n        console.log(\"response.data.data[0]\")\r\n        console.log(response.data)\r\n        // setAdminId()\r\n        setAdminId(response.data.data[0]._id)\r\n        if(response.data.data[0].username===undefined||response.data.data[0].username===null){\r\n          setAdminName(\"Null\")\r\n\r\n        }else{\r\n          setAdminName(response.data.data[0].username)\r\n        }\r\n        if(response.data.data[0].username===undefined||response.data.data[0].username===null){\r\n          setAdminProfileImg(\"Null\")\r\n        }else{\r\n          setAdminProfileImg(response.data.data[0].img)\r\n        }\r\n      })\r\n      .catch(error => console.error(`Error:${error}`));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getAllData();\r\n    const items = JSON.parse(localStorage.getItem('items'));\r\n    console.log(items)\r\n    getAdminLogin(items);\r\n\r\n  }, []);\r\n  const [tempFeature, setTempFeature] = useState();\r\n  const [tempFeatureTitle, setTempFeatureTitle] = useState();\r\n  const [ArrayList, setArrayList] = useState([]);\r\n  const RemoveItem = (arrayData) => {\r\n    setArrayList(oldValues => {\r\n      return oldValues.filter(fruit => fruit !== arrayData)\r\n    })\r\n    console.log(ArrayList)\r\n  }\r\n  const AddFeatures = () => {\r\n    console.log(tempFeature);\r\n    if (tempFeature === '' || tempFeature === null || tempFeature === undefined || tempFeatureTitle === '' || tempFeatureTitle === null || tempFeatureTitle === undefined) {\r\n      console.log('Empty')\r\n    } else {\r\n      console.log('Not Empty')\r\n\r\n      if (ArrayList.length === 0) {\r\n        setArrayList([\r\n          {\r\n            title: tempFeatureTitle,\r\n            description: tempFeature\r\n          }\r\n        ])\r\n        setTempFeature('')\r\n        setTempFeatureTitle('')\r\n\r\n        setHideShowArray(true)\r\n      } else {\r\n        setArrayList([...ArrayList, \r\n          {title: tempFeatureTitle,\r\n          description: tempFeature}]);\r\n        setTempFeature('')\r\n        setTempFeatureTitle('')\r\n\r\n\r\n      }\r\n      console.log(ArrayList)\r\n    }\r\n\r\n\r\n    //  setArrayList(ArrayList,tempFeature)\r\n\r\n  }\r\n  return (\r\n    <>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" p={2} style={{ borderBottom: '1px solid #adadad' }}>\r\n        <Breadcrumbs aria-label=\"breadcrumb\">\r\n          <Link underline=\"hover\" color=\"inherit\" href=\"/home\">\r\n            <HomeIcon />\r\n          </Link>\r\n\r\n          <Typography color=\"text.primary\">App Updates Releases</Typography>\r\n        </Breadcrumbs>\r\n        <Button variant=\"contained\"\r\n          style={{ backgroundColor: `${colors.grey[400]}` }}\r\n          // color={colors.grey[400]}\r\n          onClick={() => handleOpenAdd()}>\r\n          Add\r\n        </Button>\r\n\r\n      </Box>\r\n      <div style={{ height: '80vh', overflowY: 'scroll' }}>\r\n        <Box m=\"20px\">\r\n          <Grid container spacing={2} >\r\n            <Grid item xs={12} md={12} mt>\r\n              <Header title=\"App Updates\" subtitle=\"Managing the Updates\" />\r\n\r\n            </Grid>\r\n          </Grid>\r\n          <Box sx={{ width: '100%' }}>\r\n            <Box\r\n              m=\"5px 0 100px 0px\"\r\n              height=\"70vh\"\r\n              sx={{\r\n                \"& .MuiDataGrid-root\": {\r\n                  border: \"none\",\r\n                },\r\n                \"& .MuiDataGrid-cell\": {\r\n                  borderBottom: \"none\",\r\n                },\r\n                \"& .name-column--cell\": {\r\n                  color: colors.greenAccent[300],\r\n                },\r\n                \"& .MuiDataGrid-columnHeaders\": {\r\n                  backgroundColor: colors.grey[400],\r\n                  borderBottom: \"none\",\r\n                },\r\n                \"& .MuiDataGrid-virtualScroller\": {\r\n                  backgroundColor: colors.primary[400],\r\n                },\r\n                \"& .MuiDataGrid-footerContainer\": {\r\n                  borderTop: \"none\",\r\n                  backgroundColor: colors.grey[400],\r\n                },\r\n                \"& .MuiCheckbox-root\": {\r\n                  color: `${colors.greenAccent[200]} !important`,\r\n                },\r\n              }}\r\n            >\r\n              <Grid container spacing={2} >\r\n                {data.map((row) => (\r\n                  <Grid item xs={12} md={4} mt>\r\n                    <Card sx={{ maxWidth: 345 }}>\r\n                      <CardHeader\r\n                        avatar={\r\n                          <Avatar src={`${url}${row.profile_image}`}  />\r\n                        }\r\n                        title={`Added by : ${row.name}`}\r\n                        subheader={row.creation_date.slice(0, 10)}\r\n                      />\r\n                      <CardContent>\r\n                        {row.notes.map((row1) => (\r\n                          <Typography variant=\"body2\" color=\"text.secondary\">\r\n                            {row1.title} : {row1.description}\r\n                          </Typography>\r\n                        ))}\r\n\r\n                      </CardContent>\r\n                    </Card>\r\n                  </Grid>\r\n                ))}\r\n              </Grid>\r\n\r\n            </Box>\r\n            {/* </TabPanel> */}\r\n\r\n          </Box>\r\n          {/* SnackBar  */}\r\n          <Snackbar anchorOrigin={{ vertical: 'top', horizontal: 'right' }} open={open} autoHideDuration={3000} onClose={handleClose}>\r\n            <Alert onClose={handleClose} severity={snackbarType}\r\n              sx={{\r\n                width: '100%'\r\n              }}>\r\n              {snackbarMsg}\r\n            </Alert>\r\n          </Snackbar>\r\n\r\n          {/* Add  */}\r\n          <div>\r\n            <Modal\r\n              aria-labelledby=\"transition-modal-title\"\r\n              aria-describedby=\"transition-modal-description\"\r\n              open={openAdd}\r\n              onClose={handleCloseAdd}\r\n              closeAfterTransition\r\n              BackdropComponent={Backdrop}\r\n              BackdropProps={{\r\n                timeout: 500,\r\n              }}\r\n            >\r\n              <Fade in={openAdd}>\r\n                <Box sx={style}>\r\n                  <Grid container spacing={2} >\r\n                    <Grid item xs={12} md={12} mt={3}>\r\n                      <Typography variant=\"h3\" style={{ color: `${colors.grey[400]}`, fontWeight: 700 }} gutterBottom>\r\n                        Add App Release Update\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={2}>\r\n                      {/* color: '#7e7e7e */}\r\n                      <Typography color={colors.grey[600]} variant=\"h5\" mt={2} style={{ fontWeight: 700 }} gutterBottom>\r\n                        Notes\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                      <TextField\r\n                        value={tempFeatureTitle}\r\n                        placeholder=\"Enter Title\"\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e) => setTempFeatureTitle(e.target.value)\r\n                        }\r\n                        id=\"filled-basic\"\r\n                        variant=\"filled\" />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={4}>\r\n                      <TextField\r\n                        placeholder=\"Enter Description\"\r\n                        value={tempFeature}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e) => setTempFeature(e.target.value)\r\n                        }\r\n                        id=\"filled-basic\"\r\n                        variant=\"filled\" />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={2} md={2}>\r\n\r\n                      <Button variant=\"contained\" style={{ backgroundColor: `${colors.grey[400]}`, width: '60px', height: '50px' }}\r\n                        onClick={() => AddFeatures()\r\n                        }\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} align=\"left\">\r\n                      {hideshowarray ? <>\r\n                        <Grid container spacing={2}>\r\n                          {ArrayList.map((arrayData) => (\r\n                            <>\r\n                              <Grid item xs={1} md={1} >\r\n                                <FiberManualRecordIcon style={{fontSize:'12px'}} />\r\n\r\n                              </Grid>\r\n                              <Grid item xs={10} md={10} >\r\n                                <Typography color={colors.grey[300]} variant=\"h6\" gutterBottom>\r\n                                  {arrayData.title} : {arrayData.description}\r\n                                </Typography>\r\n                              </Grid>\r\n                             \r\n                              <Grid item xs={1} md={1} >\r\n                                <RemoveCircleOutlineIcon onClick={() => RemoveItem(arrayData)} style={{ cursor: 'pointer' }} />\r\n                              </Grid>\r\n                            </>\r\n                          ))}\r\n\r\n                        </Grid>\r\n                      </> : <></>}\r\n\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} md={12} align=\"center\">\r\n                      <Button variant=\"contained\" onClick={() => submitHandler()} style={{ backgroundColor: `${colors.grey[400]}`, width: '100px', height: '50px' }}\r\n                      >\r\n                        {loadingAdd ? <ClipLoader color={color} loading={loadingAdd} css={override} size={30} /> : <h3>Submit</h3>}\r\n\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Fade>\r\n            </Modal>\r\n          </div>\r\n        </Box>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Team;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Routes, Route, useLocation } from \"react-router-dom\";\r\nimport Topbar from \"./scenes/global/Topbar\";\r\nimport Sidebar from \"./scenes/global/Sidebar\";\r\nimport Dashboard from \"./scenes/dashboard\";\r\nimport { CssBaseline, ThemeProvider } from \"@mui/material\";\r\nimport { ColorModeContext, useMode } from \"./theme\";\r\nimport LoginPage from \"./scenes/loginPage/login\"\r\nimport SettingsData from \"./scenes/settingsData\"\r\nimport UsersApp from \"./scenes/usersApp\"\r\nimport ForgetPaswordPage from \"./scenes/forgetPassword/forgetPassword\"\r\nimport SubscriptionPlan from './scenes/subscriptionPlan'\r\nimport PrivacyPolicy from './scenes/privacypolicy'\r\nimport TermsAndConditions from './scenes/termsAndConditions';\r\nimport UsersAppView from './scenes/usersAppView'\r\nimport UsersAppUpdates from './scenes/usersAppUpdate'\r\nfunction App() {\r\n  const [theme, colorMode] = useMode();\r\n  const [isSidebar, setIsSidebar] = useState(true);\r\n  const { pathname } = useLocation();\r\n  useEffect(() => {\r\n    if (window.location.pathname === '/'||window.location.pathname === '/forget-password') {\r\n      setIsSidebar(false)\r\n    }\r\n  }, []);\r\n  return (\r\n    <ColorModeContext.Provider value={colorMode}>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <div className=\"app\" >\r\n          {pathname === '/'||pathname === '/forget-password' ? null :\r\n            <Sidebar isSidebar={isSidebar} />\r\n          }\r\n          <main className=\"content\">\r\n            {pathname === '/'||pathname === '/forget-password' ? null :\r\n              <Topbar setIsSidebar={setIsSidebar} />\r\n\r\n            }\r\n            <Routes>\r\n\r\n              <Route path=\"/\" element={<LoginPage />} />\r\n              <Route path=\"/home\" element={<Dashboard />} />\r\n              <Route path=\"/subscriptionPlan\" element={<SubscriptionPlan />} />\r\n\r\n              <Route path=\"/privacypolicy\" element={<PrivacyPolicy />} />\r\n              <Route path=\"/termsAndConditions\" element={<TermsAndConditions />} />\r\n              <Route path=\"/usersView\" element={<UsersAppView />} />\r\n              <Route path=\"/appUpdates\" element={<UsersAppUpdates />} />\r\n\r\n              <Route path=\"/users\" element={<UsersApp />} />\r\n              <Route path=\"/settings\" element={<SettingsData />} />\r\n              <Route path=\"/forget-password\" element={<ForgetPaswordPage />} />\r\n\r\n            </Routes>\r\n          </main>\r\n        </div>\r\n\r\n\r\n\r\n    \r\n      </ThemeProvider>\r\n    </ColorModeContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n);\r\n"],"sourceRoot":""}